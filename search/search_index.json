{"config":{"lang":["vi"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trang ch\u1ee7","text":""},{"location":"#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>Ch\u00e0o m\u1eebng b\u1ea1n \u0111\u1ebfn v\u1edbi kho t\u00e0i li\u1ec7u chia s\u1ebb ki\u1ebfn th\u1ee9c l\u1eadp tr\u00ecnh!</p> <p>T\u1ea1i \u0111\u00e2y, m\u00ecnh s\u1ebd chia s\u1ebd ki\u1ebfn th\u1ee9c g\u00f3p nh\u1eb7t trong l\u0129nh v\u1ef1c ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m:</p> <ul> <li>Kubernetes (K8s): Tri\u1ec3n khai, qu\u1ea3n l\u00fd v\u00e0 v\u1eadn h\u00e0nh h\u1ec7 th\u1ed1ng microservices.</li> <li>Angular: X\u00e2y d\u1ef1ng giao di\u1ec7n web hi\u1ec7n \u0111\u1ea1i v\u00e0 t\u01b0\u01a1ng t\u00e1c cao.</li> <li>Spring Boot: Ph\u00e1t tri\u1ec3n backend nhanh ch\u00f3ng v\u1edbi API Microservice.</li> <li>DevOps &amp; GitOps: T\u1ef1 \u0111\u1ed9ng h\u00f3a CI/CD v\u1edbi Jenkins, ArgoCD, v\u00e0 Kubernetes.</li> <li>B\u1ea3o m\u1eadt &amp; X\u00e1c th\u1ef1c: Qu\u1ea3n l\u00fd quy\u1ec1n truy c\u1eadp v\u1edbi Keycloak, OAuth2.</li> <li>Cloud &amp; Containerization: T\u1ed1i \u01b0u h\u00f3a h\u1ea1 t\u1ea7ng v\u1edbi Docker, Kubernetes, v\u00e0 MetalLB.</li> <li>Ph\u00e1t tri\u1ec3n mobile app: Ph\u00e1t tri\u1ec3n mobile app.</li> </ul>"},{"location":"#muc-tieu","title":"M\u1ee5c ti\u00eau","text":"<p>Chia s\u1ebb nh\u1eefng kinh nghi\u1ec7m th\u1ef1c t\u1ebf, nh\u1eefng gi\u1ea3i ph\u00e1p hi\u1ec7u qu\u1ea3 v\u00e0 nh\u1eefng h\u01b0\u1edbng d\u1eabn chi ti\u1ebft gi\u00fap b\u1ea1n n\u00e2ng cao k\u1ef9 n\u0103ng v\u00e0 ti\u1ebfp c\u1eadn nh\u1eefng c\u00f4ng ngh\u1ec7 m\u1edbi nh\u1ea5t.</p> <p>H\u00e3y c\u00f9ng nhau kh\u00e1m ph\u00e1 v\u00e0 chia s\u1ebb nh\u00e9!</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/","title":"C\u00e0i \u0111\u1eb7t Kubernetes cluster 1 master, 2 worker tr\u00ean Ubuntu 24.04","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>C\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 c\u00e0i \u0111\u1eb7t k8s, trong t\u00e0i li\u1ec7u n\u00e0y gi\u1edbi thi\u1ec7u c\u00e0i \u0111\u1eb7t th\u1ee7 c\u00f4ng k8s tr\u00ean ubuntu 24.04 \u0111\u1ec3 g\u1ea7n v\u1edbi m\u00f4i tr\u01b0\u1eddng production nh\u1ea5t</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#2-yeu-cau-he-thong","title":"2. Y\u00eau c\u1ea7u h\u1ec7 th\u1ed1ng","text":"<p>Trong m\u00f4i tr\u01b0\u1eddng th\u1eed nghi\u1ec7m:</p> <ul> <li>HP 240 GM Notebook Intel core I5 2.4Ghz, Ram: 16GB: C\u00e0i \u0111\u1eb7t 4 m\u00e1y \u1ea3o b\u1eb1ng virutalbox</li> <li>Kubernetes cluster: 01 Master, 02 Worker, 01 NFS</li> <li>Phi\u00ean b\u1ea3n h\u1ec7 \u0111i\u1ec1u h\u00e0nh: Ubuntu Server 24.04</li> </ul> <p>L\u01b0u \u00fd tr\u00ean \u0111\u00e2y ch\u1ec9 l\u00e0 m\u00f4 h\u00ecnh th\u1eed nghi\u1ec7m, c\u00f2n m\u00f4i tr\u01b0\u1eddng production n\u00ean th\u1ef1c hi\u1ec7n \u00edt nh\u1ea5t: Kubernetes cluster: 03 Master, 08 Worker \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o High Availability (HA) ho\u1eb7c nhi\u1ec1u h\u01a1n t\u00f9y thu\u1ed9c v\u00e0o \u0111\u1ed9 l\u1edbn c\u1ee7a d\u1ef1 \u00e1n</p> T\u00ean m\u00e1y/hostmane/Node H\u1ec7 \u0111i\u1ec1u h\u00e0nh IP Vai tr\u00f2 master.xtl ubuntu 24.04 192.168.1.100 master worker1.xtl ubuntu 24.04 192.168.1.101 worker 1 worker2.xtl ubuntu 24.04 192.168.1.102 worker 2 nfs.xtl ubuntu 24.04 192.168.1.110 NFS"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#3-tien-hanh-cai-at","title":"3. Ti\u1ebfn h\u00e0nh c\u00e0i \u0111\u1eb7t","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#31-cai-at-ip-cho-server-neu-chua-cau-hinh","title":"3.1. C\u00e0i \u0111\u1eb7t IP cho server n\u1ebfu ch\u01b0a c\u1ea5u h\u00ecnh","text":"<p>\u0110\u1ea7u ti\u00ean ki\u1ec3m tra IP hi\u1ec7n t\u1ea1i v\u00e0 c\u1ed5ng m\u1ea1ng c\u1ee7a m\u00e1y t\u00ednh b\u1eb1ng l\u1ec7nh <pre><code>ip addr show\n</code></pre></p> <p>\u0110\u1ed5i th\u00e0nh IP t\u0129nh</p> <p><pre><code>sudo nano /etc/netplan/00-installer-config.yaml\n</code></pre> Sau \u0111\u00f3, s\u1eeda n\u1ed9i dung file th\u00e0nh nh\u01b0 sau l\u01b0u l\u1ea1i (Ctrl + O) v\u00e0 tho\u00e1t ra (Ctrl + X)</p> <p></p> <p>Ti\u1ebfp theo ch\u1ea1y l\u1ec7nh netplan apply \u0111\u1ec3 \u00e1p d\u1ee5ng th\u00f4ng s\u1ed1 v\u1eeba m\u1edbi thay \u0111\u1ed5i</p> <p><pre><code>sudo netplan apply\n</code></pre> Tham kh\u1ea3o: D\u00f9ng virtualbox c\u00e0i c\u00e1c m\u00e1y \u1ea3o, d\u00f9ng Bridged Adapter \u0111\u1ec3 c\u00e0i ip t\u0129nh</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#32-cap-nhat-he-ieu-hanh-va-cap-nhat-hosts","title":"3.2. C\u1eadp nh\u1eadt h\u1ec7 \u0111i\u1ec1u h\u00e0nh v\u00e0 c\u1eadp nh\u1eadt hosts","text":"<p>Sau khi c\u00e0i \u0111\u1eb7t h\u1ec7 \u0111i\u1ec1u h\u00e0nh, c\u1ea7n c\u1eadp nh\u1eadt h\u1ec7 th\u1ed1ng: <pre><code>sudo apt update\nsudo apt upgrade -y\n</code></pre></p> <p>\u0110\u1eb7t hostname v\u00e0 c\u1eadp nh\u1eadt hosts file Master node <pre><code>sudo hostnamectl set-hostname \"master.xtl\"\n</code></pre></p> <p>Worker 1 <pre><code>sudo hostnamectl set-hostname \"worker1.xtl\"\n</code></pre> Worker 2 <pre><code>sudo hostnamectl set-hostname \"worker2.xtl\"\n</code></pre></p> <p>Ti\u1ebfp theo ch\u00fang ta c\u1eadp nh\u1eadt file /etc/hosts file c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c node.</p> <p>C\u00e0i nano editor n\u1ebfu server ch\u01b0a c\u00f3 <pre><code>sudo apt install -y nano \n</code></pre> M\u1edf ch\u1ec9nh s\u1eeda file etc/hosts <pre><code>sudo nano /etc/hosts\n</code></pre></p> <p>Sau \u0111\u00f3 th\u00eam v\u00e0o b\u00ean d\u01b0\u1edbi file n\u1ed9i dung d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>192.168.1.100   master.xtl\n192.168.1.101   worker1.xtl\n192.168.1.102   worker2.xtl\n192.168.1.110   nfs.xtl\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#33-disable-swap-va-cap-nhat-kernel","title":"3.3. Disable swap v\u00e0 c\u1eadp nh\u1eadt kernel","text":"<p>C\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y th\u1ef1c hi\u1ec7n tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node <pre><code>sudo swapoff -a\n</code></pre></p> <p>Ki\u1ec3m tra l\u1ea1i xem swap \u0111\u00e3 disabled hay ch\u01b0a b\u1eb1ng l\u1ec7nh free -h, n\u1ebfu th\u00e0nh c\u00f4ng k\u1ebft qu\u1ea3 s\u1ebd nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>$ free -h\n               total        used        free      shared  buff/cache   available\nMem:           7.7Gi       167Mi       7.1Gi       1.0Mi       437Mi   7.3Gi\nSwap:             0B          0B          0B\n</code></pre> <p>Ti\u1ebfp theo disable swap trong /etc/fstab <pre><code>sudo nano /etc/fstab\n</code></pre></p> <p>T\u00ecm d\u00f2ng: /swap.img none swap sw 0 0 v\u00e0 c\u1eadp nh\u1eadt l\u1ea1i th\u00e0nh: <pre><code>#/swap.img       none       swap       sw       0       0\n</code></pre></p> <p>Sau \u0111\u00f3 ch\u1ea1y ti\u1ebfp c\u00e1c l\u1ec7nh: <pre><code>sudo mount -a\n</code></pre></p> <pre><code>free -h\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#34-load-the-following-kernel-modules-on-all-the-nodes","title":"3.4. Load the following kernel modules on all the nodes:","text":"<pre><code>sudo tee /etc/modules-load.d/containerd.conf &lt;&lt;EOF\noverlay\nbr_netfilter\nEOF\n</code></pre> <pre><code>sudo modprobe overlay\nsudo modprobe br_netfilter\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#35-set-the-following-kernel-parameters-for-kubernetes","title":"3.5. Set the following Kernel parameters for Kubernetes.","text":"<pre><code>sudo tee /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n</code></pre> <p>Sau \u0111\u00f3 reload l\u1ea1i sysctl</p> <pre><code>sudo sysctl --system\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#36-cai-at-containerd-run-time","title":"3.6. C\u00e0i \u0111\u1eb7t containerd run time","text":"<p>Ch\u1ea1y c\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node</p> <pre><code>sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt update\nsudo apt install -y containerd.io\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#37-them-cau-hinh-containerd","title":"3.7. Th\u00eam c\u1ea5u h\u00ecnh containerd.","text":"<pre><code>containerd config default | sudo tee /etc/containerd/config.toml &gt;/dev/null 2&gt;&amp;1\nsudo sed -i 's/SystemdCgroup \\= false/SystemdCgroup \\= true/g' /etc/containerd/config.toml\nsudo systemctl restart containerd\nsudo systemctl enable containerd\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#38-cai-at-kubernetes","title":"3.8. C\u00e0i \u0111\u1eb7t Kubernetes","text":"<p>Ch\u1ea1y c\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node</p> <p>Ki\u1ec3m tra h\u1ec7 \u0111i\u1ec1u h\u00e0nh</p> <pre><code>lsb_release -a\n</code></pre> <p>N\u1ebfu Codename: noble th\u00ec ch\u1ea1y (trong b\u00e0i vi\u1ebft n\u00e0y \u0111ang ch\u1ea1y theo c\u00e1ch n\u00e0y)</p> <pre><code>curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/k8s.gpg\necho 'deb [signed-by=/etc/apt/keyrings/k8s.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/k8s.list\nsudo apt update\nsudo apt install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n</code></pre> <p>N\u1ebfu Codename: xenial th\u00ec ch\u1ea1y </p> <pre><code>curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\nsudo apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"\nsudo apt update\nsudo apt install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#39-khoi-tao-cluster-bang-kubeadm","title":"3.9. Kh\u1edfi t\u1ea1o cluster b\u1eb1ng kubeadm","text":"<p>Ch\u1ec9 ch\u1ea1y l\u00eanh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean master node <pre><code>sudo kubeadm init \\\n  --pod-network-cidr=10.10.0.0/16 \\\n  --control-plane-endpoint=master.xtl\n</code></pre></p> <p>Trong \u0111\u00f3 10.10.0.0/16 l\u00e0 CIDR c\u1ee7a pod network, b\u1ea1n c\u00f3 th\u1ec3 thay theo nhu c\u1ea7u.</p> <p>Ti\u1ebfp theo, th\u1ef1c thi c\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean master node</p> <pre><code>mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#310-chung-ta-thu-chay-lenh-e-kiem-tra-trang-thai-cua-cluster","title":"3.10. Ch\u00fang ta th\u1eed ch\u1ea1y l\u1ec7nh \u0111\u1ec3 ki\u1ebfm tra tr\u1ea1ng th\u00e1i c\u1ee7a cluster","text":"<pre><code>kubectl cluster-info\nkubectl get nodes\n</code></pre> <p>Ch\u00fang ta th\u1ea5y l\u00e0 control plane \u0111ang ch\u1ea1y v\u00e0 hi\u1ec7n t\u1ea1i ch\u1ec9 c\u00f3 m\u1ed7i master node, ch\u00fang ta s\u1ebd ti\u1ebfn h\u00e0nh th\u00eam worker node v\u00e0o cluster n\u00e0y.</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#311-them-worker-node-vao-cluster","title":"3.11. Th\u00eam worker node v\u00e0o cluster","text":"<p>L\u01b0u \u00fd: Ch\u1ea1y tr\u00ean master, l\u1ea5y m\u00e3 k\u1ebft n\u1ed1i worker v\u00e0o master <pre><code> kubeadm token create --print-join-command\n</code></pre></p> <p>Sau \u0111\u00f3, copy \u0111\u1ea7u ra v\u00e0o worker, v\u00ed d\u1ee5: L\u01b0u \u00fd: C\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y ch\u1ec9 ch\u1ea1y tr\u00ean c\u00e1c worker node</p> <p><pre><code>sudo kubeadm join master.xtl:6443 --token pow1z7.c4f9zyzy7i6u0cdt \\\n        --discovery-token-ca-cert-hash sha256:e31d7ac96745444bcc2f5b0313103a6e75803b994012ae7b217a579cde4f2ec1 \n</code></pre> Khi ch\u1ea1y kubectl get nodes \u0111\u1ec3 ki\u1ebfm tra c\u00e1c node (ch\u1ea1y tr\u00ean terminal c\u1ee7a master node), k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1:</p> <p><pre><code>phuoctv@phuoctv:~$ kubectl get nodes\nNAME          STATUS     ROLES           AGE    VERSION\nmaster.xtl    NotReady   control-plane   7m5s   v1.30.5\nworker1.xtl   NotReady   &lt;none&gt;          21s    v1.30.5\nworker2.xtl   NotReady   &lt;none&gt;          6s     v1.30.5\n</code></pre> cho th\u1ea5y l\u00e0 c\u00e1c node \u0111\u00e3 \u0111\u01b0\u1ee3c th\u00eam th\u00e0nh c\u00f4ng v\u00e0o cluster.</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#312-cai-at-calico-pod-network-cho-kubernetes-cluster","title":"3.12. C\u00e0i \u0111\u1eb7t Calico Pod Network cho Kubernetes cluster","text":"<p>L\u01b0u \u00fd: C\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y ch\u1ec9 ch\u1ea1y tr\u00ean master node</p> <p>\u0110\u1ea7u ti\u00ean ch\u00fang ta t\u1ea3i v\u1ec1 file manifest d\u01b0\u1edbi d\u1ea1ng file yaml, \u0111\u00e2y l\u00e0 file c\u00e0i \u0111\u1eb7t Calico tr\u00ean Kubernetes cluster c\u00f3 s\u1ed1 node nh\u1ecf h\u01a1n 5</p> <pre><code>curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml -O\n</code></pre> <p>M\u1edf file v\u1eeba t\u1ea3i v\u1ec1 v\u00e0 t\u00ecm \u0111\u1ec3 ph\u1ea7n CALICO_IPV4POOL_CIDR Ch\u00fang ta s\u1eeda l\u1ea1i d\u1ea3i IP cho \u0111\u00fang v\u1edbi CIDR c\u1ee7a pod network trong l\u1ec7nh sudo kubeadm init. Trong v\u00ed d\u1ee5 c\u1ee7a m\u00ecnh l\u00e0 10.10.0.0/16 n\u00ean file sau khi s\u1eeda l\u1ea1i c\u00f3 d\u1ea1ng nh\u01b0 sau <pre><code>---\n# The default IPv4 pool to create on startup if none exists. Pod IPs will be\n# chosen from this range. Changing this value after installation will have\n# no effect. This should fall within `--cluster-cidr`.\n- name: CALICO_IPV4POOL_CIDR\n  value: '10.10.0.0/16'\n# Disable file logging so `kubectl logs` works.\n- name: CALICO_DISABLE_FILE_LOGGING\n  value: 'true'\n</code></pre></p> <p>Sau \u0111\u00f3 ch\u00fang ta c\u00e0i Calico l\u00ean Kubernetes cluster:</p> <pre><code>kubectl apply -f calico.yaml\n</code></pre> <p>Ch\u00fang ta s\u1ebd ki\u1ec3m tra xem calico \u0111\u00e3 \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng ch\u01b0a b\u1eb1ng c\u00e1ch ki\u1ec3m tra c\u00e1c pod tr\u00ean namespace kube-system</p> <pre><code>kubectl get pods -n kube-system\n\nNAME                                                 READY   STATUS    RESTARTS   AGE\ncalico-kube-controllers-57b57c56f-ptddp              1/1     Running   0          2m44s\ncalico-node-5fqml                                    1/1     Running   0          2m44s\ncalico-node-llfjq                                    1/1     Running   0          2m44s\ncalico-node-vw78h                                    1/1     Running   0          2m44s\ncoredns-787d4945fb-n7s9t                             1/1     Running   0          62m\ncoredns-787d4945fb-rs9mj\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#313-kiem-tra-trang-thai-cua-cac-node-sau-khi-cai-thanh-cong","title":"3.13. Ki\u1ec3m tra tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c node, sau khi c\u00e0i th\u00e0nh c\u00f4ng","text":"<p>N\u1ebfu status l\u00e0 Running c\u00f3 ngh\u0129a \u0111\u00e3 deploy th\u00e0nh c\u00f4ng, b\u00e2y gi\u1edd n\u1ebfu ki\u1ec3m tra tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c node th\u00ec status s\u1ebd l\u00e0 Ready</p> <pre><code>phuoctv@phuoctv:~$ kubectl get nodes\nNAME          STATUS   ROLES           AGE   VERSION\nmaster.xtl    Ready    control-plane   26m   v1.30.5\nworker1.xtl   Ready    &lt;none&gt;          19m   v1.30.5\nworker2.xtl   Ready    &lt;none&gt;          19m   v1.30.5\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Kubernetes%20cluster%201%20master%2C%202%20worker%20tr%C3%AAn%20Ubuntu%2024.04/#4-tai-lieu-tham-khao","title":"4. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>C\u00e0i \u0111\u1eb7t Kubernetes cluster tr\u00ean Ubuntu server 22.04</li> <li>Installing kubeadm</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Metallb/","title":"C\u00e0i \u0111\u1eb7t Metallb + Ingress Nginx","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Metallb/#1-gioi-thieu-metallb-ingress-nginx","title":"1. Gi\u1edbi thi\u1ec7u Metallb + Ingress nginx","text":"<p>MetalLB gi\u00fap Kubernetes tri\u1ec3n khai d\u1ecbch v\u1ee5 LoadBalancer m\u00e0 kh\u00f4ng c\u1ea7n n\u1ec1n t\u1ea3ng \u0111\u00e1m m\u00e2y, b\u1eb1ng c\u00e1ch c\u1ea5p ph\u00e1t \u0111\u1ecba ch\u1ec9 v\u00e0 c\u00f4ng b\u1ed1 \u0111\u1ecba ch\u1ec9 ra b\u00ean ngo\u00e0i.</p> <p>Sau khi c\u00e0i Ingress nginx ch\u00fang ta th\u1ea5y 2 port 80/443 tr\u00ean Nginx \u0111\u01b0\u1ee3c map t\u01b0\u01a1ng \u1ee9ng sang port 32000/32748</p> <p><pre><code>kubectl get services -n ingress-nginx\n\nNAME                                 TYPE           CLUSTER-IP       EXTERNAL-IP    PORT(S)                      AGE\ningress-nginx-controller             LoadBalancer   10.103.11.172    &lt;none&gt;         80:32000/TCP,443:32748/TCP   17d\ningress-nginx-controller-admission   ClusterIP      10.107.107.210   &lt;none&gt;         443/TCP                      17d\n</code></pre> Nh\u01b0 v\u1eady n\u1ebfu mu\u1ed1n access v\u00e0o App1 tr\u00ean K8s th\u00f4ng qua Ingress Nginx th\u00ec c\u1ea7n truy c\u1eadp nh\u01b0 sau:</p> <ul> <li>HTTP: http://app1.example.com:32000</li> <li>HTTPS: https://app1.example.com:32748</li> </ul> <p>Nh\u01b0 v\u1eady kh\u00e1 l\u00e0 b\u1ea5t ti\u1ec7n, ch\u00fang ta c\u00f3 th\u1ec3:</p> <ul> <li> <p>D\u00f9ng ch\u1ee9c n\u0103ng port-forward tr\u00ean router \u0111\u1ec3 mapping ti\u1ebfp port 80-&gt;32000 v\u00e0 443-&gt;32748. V\u1ec1 c\u01a1 b\u1ea3n \u0111\u01b0\u1eddng \u0111i c\u1ee7a n\u00f3 nh\u01b0 sau: Internet (80/http) \u2013&gt;router (port-forward) \u2013&gt; Kuberentes IP (32000/http) \u2013&gt; Nginx (80/http)</p> </li> <li> <p>D\u00f9ng 1 Proxy nh\u01b0 Haproxy ho\u1eb7c Nginx \u0111\u1ee9ng tr\u01b0\u1edbc K8s cluster \u0111\u1ec3 \u0111i\u1ec1u ph\u1ed1i</p> </li> </ul> <p>\u0110\u1ec3 tr\u00e1nh nh\u1eefng ph\u1ee9c t\u1ea1p khi tri\u1ec3n khai Ingress Nginx tr\u00ean Bare metal K8s cluster, d\u01b0\u1edbi \u0111\u00e2y m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u c\u00e1ch tri\u1ec3n khai Metallb v\u00e0 Ingress Nginx (Load Balancer)</p> <p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 s\u01a1 \u0111\u1ed3 h\u1ec7 th\u1ed1ng s\u1ebd tri\u1ec3n khai</p> <p></p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Metallb/#2-cai-at-metallb","title":"2. C\u00e0i \u0111\u1eb7t Metallb","text":"<p>N\u1ebfu b\u1ea1n \u0111ang s\u1eed d\u1ee5ng kube-proxy \u1edf ch\u1ebf \u0111\u1ed9 IPVS, k\u1ec3 t\u1eeb Kubernetes v1.14.2, b\u1ea1n ph\u1ea3i b\u1eadt ch\u1ebf \u0111\u1ed9 ARP nghi\u00eam ng\u1eb7t (strict ARP mode).</p> <p>L\u01b0u \u00fd</p> <p>L\u01b0u \u00fd, b\u1ea1n kh\u00f4ng c\u1ea7n l\u00e0m \u0111i\u1ec1u n\u00e0y n\u1ebfu b\u1ea1n \u0111ang s\u1eed d\u1ee5ng kube-router l\u00e0m service-proxy, v\u00ec kube-router \u0111\u00e3 b\u1eadt strict ARP theo m\u1eb7c \u0111\u1ecbnh..</p> <p>B\u1ea1n c\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n \u0111i\u1ec1u n\u00e0y b\u1eb1ng c\u00e1ch ch\u1ec9nh s\u1eeda c\u1ea5u h\u00ecnh kube-proxy trong c\u1ee5m hi\u1ec7n t\u1ea1i:</p> <pre><code>kubectl edit configmap -n kube-system kube-proxy\n</code></pre> <p>V\u00e0 ch\u1ec9nh s\u1eeda nh\u01b0 sau:</p> <pre><code>apiVersion: kubeproxy.config.k8s.io/v1alpha1\nkind: KubeProxyConfiguration\nmode: \"ipvs\"\nipvs:\n  strictARP: true\n</code></pre> <p>Ho\u1eb7c c\u00f3 th\u1ec3 ch\u1ea1y b\u1eb1ng l\u1ec7nh</p> <pre><code># see what changes would be made, returns nonzero returncode if different\nkubectl get configmap kube-proxy -n kube-system -o yaml | \\\nsed -e \"s/strictARP: false/strictARP: true/\" | \\\nkubectl diff -f - -n kube-system\n\n# actually apply the changes, returns nonzero returncode on errors only\nkubectl get configmap kube-proxy -n kube-system -o yaml | \\\nsed -e \"s/strictARP: false/strictARP: true/\" | \\\nkubectl apply -f - -n kube-system\n</code></pre> <p>Sau \u0111\u00f3 ch\u1ea1y l\u1ec7nh n\u00e0y \u0111\u1ec3 c\u00e0i \u0111\u1eb7t</p> <pre><code>kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.9/config/manifests/metallb-native.yaml\n</code></pre> <p>Ti\u1ebfp theo, ch\u00fang ta c\u1ea7n config d\u1ea3i IP s\u1ebd c\u1ea5p ph\u00e1t cho Metallb, t\u1ea1o file config.yaml v\u1edbi n\u1ed9i dung d\u01b0\u1edbi \u0111\u00e2y:</p> config.yaml<pre><code>apiVersion: metallb.io/v1beta1\nkind: IPAddressPool\nmetadata:\n  name: default-pool\n  namespace: metallb-system\nspec:\n  addresses:\n    - 192.168.1.50/32\n---\napiVersion: metallb.io/v1beta1\nkind: L2Advertisement\nmetadata:\n  name: default\n  namespace: metallb-system\nspec:\n  ipAddressPools:\n    - default-pool\n</code></pre> <p>Trong tr\u01b0\u1eddng h\u1ee3p c\u1ee7a m\u00ecnh, do ch\u1ec9 \u0111\u1ec3 h\u1ecdc t\u1eadp, nghi\u00ean c\u1ee9u n\u00ean m\u00ecnh ch\u1ec9 set IP Pool c\u00f3 duy nh\u1ea5t 1 IP, Sau \u0111\u00f3 ch\u00fang ta apply thi\u1ebft l\u1eadp n\u00e0y cho Metallb</p> <pre><code>kubectl apply -f config.yaml\n</code></pre> <p>Ki\u1ec3m tra xem resouce \u0111\u00e3 \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng ch\u01b0a: <pre><code>phuoctv@master:~$ kubectl get services -n ingress-nginx\nNAME                                 TYPE           CLUSTER-IP       EXTERNAL-IP    PORT(S)                      AGE\ningress-nginx-controller             LoadBalancer   10.103.11.172    192.168.1.50   80:32000/TCP,443:32748/TCP   17d\ningress-nginx-controller-admission   ClusterIP      10.107.107.210   &lt;none&gt;         443/TCP                      17d\nphuoctv@master:~$ kubectl get all -n metallb-system\nNAME                             READY   STATUS    RESTARTS   AGE\npod/controller-7dcb87658-nhfqv   1/1     Running   0          18d\npod/speaker-792gx                1/1     Running   0          18d\npod/speaker-b99p7                1/1     Running   0          18d\npod/speaker-chvdv                1/1     Running   0          18d\npod/speaker-rzjhp                1/1     Running   0          6d23h\npod/speaker-wlv2f                1/1     Running   0          6d23h\n\nNAME                              TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE\nservice/metallb-webhook-service   ClusterIP   10.107.7.6   &lt;none&gt;        443/TCP   18d\n\nNAME                     DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR            AGE\ndaemonset.apps/speaker   3         3         3       3            3           kubernetes.io/os=linux   18d\n\nNAME                         READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/controller   1/1     1            1           18d\n\nNAME                                   DESIRED   CURRENT   READY   AGE\nreplicaset.apps/controller-7dcb87658   1         1         1       18d\n</code></pre></p> <p>Ki\u1ec3m tra xem c\u00e1c resouce c\u1ee7a ingress nginx \u0111\u00e3 \u0111\u01b0\u1ee3c tri\u1ec3n khai ch\u01b0a <pre><code>phuoctv@master:~$ kubectl get all -n ingress-nginx\nNAME                                            READY   STATUS    RESTARTS   AGE\npod/ingress-nginx-controller-5486b65c4d-xn4qq   1/1     Running   0          17d\n\nNAME                                         TYPE           CLUSTER-IP       EXTERNAL-IP    PORT(S)                      AGE\nservice/ingress-nginx-controller             LoadBalancer   10.103.11.172    192.168.1.50   80:32000/TCP,443:32748/TCP   17d\nservice/ingress-nginx-controller-admission   ClusterIP      10.107.107.210   &lt;none&gt;         443/TCP                      17d\n\nNAME                                       READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/ingress-nginx-controller   1/1     1            1           17d\n\nNAME                                                  DESIRED   CURRENT   READY   AGE\nreplicaset.apps/ingress-nginx-controller-5486b65c4d   1         1         1       17d\nphuoctv@master:~$\n</code></pre></p> <p>Nh\u01b0 v\u1eady ch\u00fang ta c\u00f3 th\u1ec3 th\u1ea5y service/ingress-nginx-controller lo\u1ea1i LoadBalancer \u0111\u00e3 \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng v\u00e0 External IP l\u00e0 192.168.1.50</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20Metallb/#3-tai-lieu-tham-khao","title":"3. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>C\u00e0i \u0111\u1eb7t Metallb v\u00e0 Ingress Nginx tr\u00ean Bare metal Kubernetes cluster c\u1ee7a anh nvtienanh</li> <li>Installation Metallb</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/","title":"C\u00e0i \u0111\u1eb7t Argocd","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#1-gioi-thieu-argo-cd-cong-cu-gitops-cho-kubernetes","title":"1. Gi\u1edbi thi\u1ec7u Argo CD - C\u00f4ng c\u1ee5 GitOps cho Kubernetes","text":"<p>Argo CD l\u00e0 c\u00f4ng c\u1ee5 GitOps gi\u00fap t\u1ef1 \u0111\u1ed9ng tri\u1ec3n khai v\u00e0 \u0111\u1ed3ng b\u1ed9 \u1ee9ng d\u1ee5ng tr\u00ean Kubernetes theo tr\u1ea1ng th\u00e1i khai b\u00e1o trong Git.</p> <p></p> <p>Ch\u1ee9c n\u0103ng ch\u00ednh:</p> <p>\u2705 Tri\u1ec3n khai t\u1eeb Git (YAML, Helm, Kustomize...) \u2705 \u0110\u1ed3ng b\u1ed9 tr\u1ea1ng th\u00e1i (t\u1ef1 \u0111\u1ed9ng ho\u1eb7c th\u1ee7 c\u00f4ng) \u2705 Qu\u1ea3n l\u00fd nhi\u1ec1u cluster Kubernetes \u2705 Giao di\u1ec7n Web UI &amp; CLI tr\u1ef1c quan \u2705 RBAC &amp; SSO (qu\u1ea3n l\u00fd quy\u1ec1n truy c\u1eadp) \u2705 T\u00edch h\u1ee3p CI/CD (Jenkins, GitHub Actions...) \u2705 H\u1ed7 tr\u1ee3 Canary &amp; Blue-Green Deployment \u2705 Gi\u00e1m s\u00e1t &amp; c\u1ea3nh b\u00e1o l\u1ed7i (Prometheus, Grafana)  </p> <p>T\u00f3m l\u1ea1i</p> <p>Argo CD gi\u00fap qu\u1ea3n l\u00fd Kubernetes d\u1ec5 d\u00e0ng, t\u1ef1 \u0111\u1ed9ng v\u00e0 an to\u00e0n theo m\u00f4 h\u00ecnh GitOps. \ud83d\ude80</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#2-cai-at-argocd","title":"2. C\u00e0i \u0111\u1eb7t Argocd","text":"<pre><code>kubectl create namespace argocd\nkubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#3-lay-tai-khoan-cho-argocd","title":"3. L\u1ea5y T\u00e0i kho\u1ea3n cho Argocd","text":"<p>T\u00e0i kho\u1ea3n m\u1eb7c \u0111\u1ecbnh: admin</p> <p>L\u1ea5y m\u1eadt kh\u1ea9u: <pre><code>kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath=\"{.data.password}\" | base64 --decode\n</code></pre></p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#4-tao-tls-cho-argocd","title":"4. T\u1ea1o TLS cho Argocd","text":"default-server-secret.yaml<pre><code>apiVersion: v1\ndata:\n  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQWFZQ0NRREFPRjl0THNhWFhEQU5CZ2txaGtpRzl3MEJBUXNGQURBaE1SOHdIUVlEVlFRRERCWk8KUjBsT1dFbHVaM0psYzNORGIyNTBjbTlzYkdWeU1CNFhEVEU0TURreE1qRTRNRE16TlZvWERUSXpNRGt4TVRFNApNRE16TlZvd0lURWZNQjBHQTFVRUF3d1dUa2RKVGxoSmJtZHlaWE56UTI5dWRISnZiR3hsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUwvN2hIUEtFWGRMdjNyaUM3QlBrMTNpWkt5eTlyQ08KR2xZUXYyK2EzUDF0azIrS3YwVGF5aGRCbDRrcnNUcTZzZm8vWUk1Y2Vhbkw4WGM3U1pyQkVRYm9EN2REbWs1Qgo4eDZLS2xHWU5IWlg0Rm5UZ0VPaStlM2ptTFFxRlBSY1kzVnNPazFFeUZBL0JnWlJVbkNHZUtGeERSN0tQdGhyCmtqSXVuektURXUyaDU4Tlp0S21ScUJHdDEwcTNRYzhZT3ExM2FnbmovUWRjc0ZYYTJnMjB1K1lYZDdoZ3krZksKWk4vVUkxQUQ0YzZyM1lma1ZWUmVHd1lxQVp1WXN2V0RKbW1GNWRwdEMzN011cDBPRUxVTExSakZJOTZXNXIwSAo1TmdPc25NWFJNV1hYVlpiNWRxT3R0SmRtS3FhZ25TZ1JQQVpQN2MwQjFQU2FqYzZjNGZRVXpNQ0F3RUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpLb2tRdGRPcEsrTzhibWVPc3lySmdJSXJycVFVY2ZOUitjb0hZVUoKdGhrYnhITFMzR3VBTWI5dm15VExPY2xxeC9aYzJPblEwMEJCLzlTb0swcitFZ1U2UlVrRWtWcitTTFA3NTdUWgozZWI4dmdPdEduMS9ienM3bzNBaS9kclkrcUI5Q2k1S3lPc3FHTG1US2xFaUtOYkcyR1ZyTWxjS0ZYQU80YTY3Cklnc1hzYktNbTQwV1U3cG9mcGltU1ZmaXFSdkV5YmN3N0NYODF6cFErUyt1eHRYK2VBZ3V0NHh3VlI5d2IyVXYKelhuZk9HbWhWNThDd1dIQnNKa0kxNXhaa2VUWXdSN0diaEFMSkZUUkk3dkhvQXprTWIzbjAxQjQyWjNrN3RXNQpJUDFmTlpIOFUvOWxiUHNoT21FRFZkdjF5ZytVRVJxbStGSis2R0oxeFJGcGZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdi91RWM4b1JkMHUvZXVJTHNFK1RYZUprckxMMnNJNGFWaEMvYjVyYy9XMlRiNHEvClJOcktGMEdYaVN1eE9ycXgrajlnamx4NXFjdnhkenRKbXNFUkJ1Z1B0ME9hVGtIekhvb3FVWmcwZGxmZ1dkT0EKUTZMNTdlT1l0Q29VOUZ4amRXdzZUVVRJVUQ4R0JsRlNjSVo0b1hFTkhzbysyR3VTTWk2Zk1wTVM3YUhudzFtMApxWkdvRWEzWFNyZEJ6eGc2clhkcUNlUDlCMXl3VmRyYURiUzc1aGQzdUdETDU4cGszOVFqVUFQaHpxdmRoK1JWClZGNGJCaW9CbTVpeTlZTW1hWVhsMm0wTGZzeTZuUTRRdFFzdEdNVWozcGJtdlFmazJBNnljeGRFeFpkZFZsdmwKMm82MjBsMllxcHFDZEtCRThCay90elFIVTlKcU56cHpoOUJUTXdJREFRQUJBb0lCQVFDZklHbXowOHhRVmorNwpLZnZJUXQwQ0YzR2MxNld6eDhVNml4MHg4Mm15d1kxUUNlL3BzWE9LZlRxT1h1SENyUlp5TnUvZ2IvUUQ4bUFOCmxOMjRZTWl0TWRJODg5TEZoTkp3QU5OODJDeTczckM5bzVvUDlkazAvYzRIbjAzSkVYNzZ5QjgzQm9rR1FvYksKMjhMNk0rdHUzUmFqNjd6Vmc2d2szaEhrU0pXSzBwV1YrSjdrUkRWYmhDYUZhNk5nMUZNRWxhTlozVDhhUUtyQgpDUDNDeEFTdjYxWTk5TEI4KzNXWVFIK3NYaTVGM01pYVNBZ1BkQUk3WEh1dXFET1lvMU5PL0JoSGt1aVg2QnRtCnorNTZud2pZMy8yUytSRmNBc3JMTnIwMDJZZi9oY0IraVlDNzVWYmcydVd6WTY3TWdOTGQ5VW9RU3BDRkYrVm4KM0cyUnhybnhBb0dCQU40U3M0ZVlPU2huMVpQQjdhTUZsY0k2RHR2S2ErTGZTTXFyY2pOZjJlSEpZNnhubmxKdgpGenpGL2RiVWVTbWxSekR0WkdlcXZXaHFISy9iTjIyeWJhOU1WMDlRQ0JFTk5jNmtWajJTVHpUWkJVbEx4QzYrCk93Z0wyZHhKendWelU0VC84ajdHalRUN05BZVpFS2FvRHFyRG5BYWkyaW5oZU1JVWZHRXFGKzJyQW9HQkFOMVAKK0tZL0lsS3RWRzRKSklQNzBjUis3RmpyeXJpY05iWCtQVzUvOXFHaWxnY2grZ3l4b25BWlBpd2NpeDN3QVpGdwpaZC96ZFB2aTBkWEppc1BSZjRMazg5b2pCUmpiRmRmc2l5UmJYbyt3TFU4NUhRU2NGMnN5aUFPaTVBRHdVU0FkCm45YWFweUNweEFkREtERHdObit3ZFhtaTZ0OHRpSFRkK3RoVDhkaVpBb0dCQUt6Wis1bG9OOTBtYlF4VVh5YUwKMjFSUm9tMGJjcndsTmVCaWNFSmlzaEhYa2xpSVVxZ3hSZklNM2hhUVRUcklKZENFaHFsV01aV0xPb2I2NTNyZgo3aFlMSXM1ZUtka3o0aFRVdnpldm9TMHVXcm9CV2xOVHlGanIrSWhKZnZUc0hpOGdsU3FkbXgySkJhZUFVWUNXCndNdlQ4NmNLclNyNkQrZG8wS05FZzFsL0FvR0FlMkFVdHVFbFNqLzBmRzgrV3hHc1RFV1JqclRNUzRSUjhRWXQKeXdjdFA4aDZxTGxKUTRCWGxQU05rMXZLTmtOUkxIb2pZT2pCQTViYjhibXNVU1BlV09NNENoaFJ4QnlHbmR2eAphYkJDRkFwY0IvbEg4d1R0alVZYlN5T294ZGt5OEp0ek90ajJhS0FiZHd6NlArWDZDODhjZmxYVFo5MWpYL3RMCjF3TmRKS2tDZ1lCbyt0UzB5TzJ2SWFmK2UwSkN5TGhzVDQ5cTN3Zis2QWVqWGx2WDJ1VnRYejN5QTZnbXo5aCsKcDNlK2JMRUxwb3B0WFhNdUFRR0xhUkcrYlNNcjR5dERYbE5ZSndUeThXczNKY3dlSTdqZVp2b0ZpbmNvVlVIMwphdmxoTUVCRGYxSjltSDB5cDBwWUNaS2ROdHNvZEZtQktzVEtQMjJhTmtsVVhCS3gyZzR6cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\nkind: Secret\nmetadata:\n  annotations:\n    kubectl.kubernetes.io/last-applied-configuration: |\n      {\"apiVersion\":\"v1\",\"data\":{\"tls.crt\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQWFZQ0NRREFPRjl0THNhWFhEQU5CZ2txaGtpRzl3MEJBUXNGQURBaE1SOHdIUVlEVlFRRERCWk8KUjBsT1dFbHVaM0psYzNORGIyNTBjbTlzYkdWeU1CNFhEVEU0TURreE1qRTRNRE16TlZvWERUSXpNRGt4TVRFNApNRE16TlZvd0lURWZNQjBHQTFVRUF3d1dUa2RKVGxoSmJtZHlaWE56UTI5dWRISnZiR3hsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUwvN2hIUEtFWGRMdjNyaUM3QlBrMTNpWkt5eTlyQ08KR2xZUXYyK2EzUDF0azIrS3YwVGF5aGRCbDRrcnNUcTZzZm8vWUk1Y2Vhbkw4WGM3U1pyQkVRYm9EN2REbWs1Qgo4eDZLS2xHWU5IWlg0Rm5UZ0VPaStlM2ptTFFxRlBSY1kzVnNPazFFeUZBL0JnWlJVbkNHZUtGeERSN0tQdGhyCmtqSXVuektURXUyaDU4Tlp0S21ScUJHdDEwcTNRYzhZT3ExM2FnbmovUWRjc0ZYYTJnMjB1K1lYZDdoZ3krZksKWk4vVUkxQUQ0YzZyM1lma1ZWUmVHd1lxQVp1WXN2V0RKbW1GNWRwdEMzN011cDBPRUxVTExSakZJOTZXNXIwSAo1TmdPc25NWFJNV1hYVlpiNWRxT3R0SmRtS3FhZ25TZ1JQQVpQN2MwQjFQU2FqYzZjNGZRVXpNQ0F3RUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpLb2tRdGRPcEsrTzhibWVPc3lySmdJSXJycVFVY2ZOUitjb0hZVUoKdGhrYnhITFMzR3VBTWI5dm15VExPY2xxeC9aYzJPblEwMEJCLzlTb0swcitFZ1U2UlVrRWtWcitTTFA3NTdUWgozZWI4dmdPdEduMS9ienM3bzNBaS9kclkrcUI5Q2k1S3lPc3FHTG1US2xFaUtOYkcyR1ZyTWxjS0ZYQU80YTY3Cklnc1hzYktNbTQwV1U3cG9mcGltU1ZmaXFSdkV5YmN3N0NYODF6cFErUyt1eHRYK2VBZ3V0NHh3VlI5d2IyVXYKelhuZk9HbWhWNThDd1dIQnNKa0kxNXhaa2VUWXdSN0diaEFMSkZUUkk3dkhvQXprTWIzbjAxQjQyWjNrN3RXNQpJUDFmTlpIOFUvOWxiUHNoT21FRFZkdjF5ZytVRVJxbStGSis2R0oxeFJGcGZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\",\"tls.key\":\"LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdi91RWM4b1JkMHUvZXVJTHNFK1RYZUprckxMMnNJNGFWaEMvYjVyYy9XMlRiNHEvClJOcktGMEdYaVN1eE9ycXgrajlnamx4NXFjdnhkenRKbXNFUkJ1Z1B0ME9hVGtIekhvb3FVWmcwZGxmZ1dkT0EKUTZMNTdlT1l0Q29VOUZ4amRXdzZUVVRJVUQ4R0JsRlNjSVo0b1hFTkhzbysyR3VTTWk2Zk1wTVM3YUhudzFtMApxWkdvRWEzWFNyZEJ6eGc2clhkcUNlUDlCMXl3VmRyYURiUzc1aGQzdUdETDU4cGszOVFqVUFQaHpxdmRoK1JWClZGNGJCaW9CbTVpeTlZTW1hWVhsMm0wTGZzeTZuUTRRdFFzdEdNVWozcGJtdlFmazJBNnljeGRFeFpkZFZsdmwKMm82MjBsMllxcHFDZEtCRThCay90elFIVTlKcU56cHpoOUJUTXdJREFRQUJBb0lCQVFDZklHbXowOHhRVmorNwpLZnZJUXQwQ0YzR2MxNld6eDhVNml4MHg4Mm15d1kxUUNlL3BzWE9LZlRxT1h1SENyUlp5TnUvZ2IvUUQ4bUFOCmxOMjRZTWl0TWRJODg5TEZoTkp3QU5OODJDeTczckM5bzVvUDlkazAvYzRIbjAzSkVYNzZ5QjgzQm9rR1FvYksKMjhMNk0rdHUzUmFqNjd6Vmc2d2szaEhrU0pXSzBwV1YrSjdrUkRWYmhDYUZhNk5nMUZNRWxhTlozVDhhUUtyQgpDUDNDeEFTdjYxWTk5TEI4KzNXWVFIK3NYaTVGM01pYVNBZ1BkQUk3WEh1dXFET1lvMU5PL0JoSGt1aVg2QnRtCnorNTZud2pZMy8yUytSRmNBc3JMTnIwMDJZZi9oY0IraVlDNzVWYmcydVd6WTY3TWdOTGQ5VW9RU3BDRkYrVm4KM0cyUnhybnhBb0dCQU40U3M0ZVlPU2huMVpQQjdhTUZsY0k2RHR2S2ErTGZTTXFyY2pOZjJlSEpZNnhubmxKdgpGenpGL2RiVWVTbWxSekR0WkdlcXZXaHFISy9iTjIyeWJhOU1WMDlRQ0JFTk5jNmtWajJTVHpUWkJVbEx4QzYrCk93Z0wyZHhKendWelU0VC84ajdHalRUN05BZVpFS2FvRHFyRG5BYWkyaW5oZU1JVWZHRXFGKzJyQW9HQkFOMVAKK0tZL0lsS3RWRzRKSklQNzBjUis3RmpyeXJpY05iWCtQVzUvOXFHaWxnY2grZ3l4b25BWlBpd2NpeDN3QVpGdwpaZC96ZFB2aTBkWEppc1BSZjRMazg5b2pCUmpiRmRmc2l5UmJYbyt3TFU4NUhRU2NGMnN5aUFPaTVBRHdVU0FkCm45YWFweUNweEFkREtERHdObit3ZFhtaTZ0OHRpSFRkK3RoVDhkaVpBb0dCQUt6Wis1bG9OOTBtYlF4VVh5YUwKMjFSUm9tMGJjcndsTmVCaWNFSmlzaEhYa2xpSVVxZ3hSZklNM2hhUVRUcklKZENFaHFsV01aV0xPb2I2NTNyZgo3aFlMSXM1ZUtka3o0aFRVdnpldm9TMHVXcm9CV2xOVHlGanIrSWhKZnZUc0hpOGdsU3FkbXgySkJhZUFVWUNXCndNdlQ4NmNLclNyNkQrZG8wS05FZzFsL0FvR0FlMkFVdHVFbFNqLzBmRzgrV3hHc1RFV1JqclRNUzRSUjhRWXQKeXdjdFA4aDZxTGxKUTRCWGxQU05rMXZLTmtOUkxIb2pZT2pCQTViYjhibXNVU1BlV09NNENoaFJ4QnlHbmR2eAphYkJDRkFwY0IvbEg4d1R0alVZYlN5T294ZGt5OEp0ek90ajJhS0FiZHd6NlArWDZDODhjZmxYVFo5MWpYL3RMCjF3TmRKS2tDZ1lCbyt0UzB5TzJ2SWFmK2UwSkN5TGhzVDQ5cTN3Zis2QWVqWGx2WDJ1VnRYejN5QTZnbXo5aCsKcDNlK2JMRUxwb3B0WFhNdUFRR0xhUkcrYlNNcjR5dERYbE5ZSndUeThXczNKY3dlSTdqZVp2b0ZpbmNvVlVIMwphdmxoTUVCRGYxSjltSDB5cDBwWUNaS2ROdHNvZEZtQktzVEtQMjJhTmtsVVhCS3gyZzR6cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=\"},\"kind\":\"Secret\",\"metadata\":{\"annotations\":{},\"name\":\"default-server-secret\",\"namespace\":\"nginx-ingress\"},\"type\":\"kubernetes.io/tls\"}\n  creationTimestamp: \"2024-10-17T14:15:43Z\"\n  name: default-server-secret-argocd\n  namespace: argocd\n  resourceVersion: \"4954\"\n  uid: 6913f795-8c2e-44eb-a822-bf519f2508bb\ntype: kubernetes.io/tls\n</code></pre> <p>L\u01b0u \u00fd</p> <p>L\u01b0u \u00fd, b\u1ea1n c\u00f3 th\u1ec3 thay tls kh\u00e1c c\u1ee7a b\u1ea1n</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#5-tao-ingress-cho-argocd","title":"5. T\u1ea1o Ingress cho Argocd","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: app\n  namespace: argocd\n  annotations:\n    kubernetes.io/ingress.class: \"nginx\"\n    nginx.ingress.kubernetes.io/force-ssl-redirect: \"true\"\n    nginx.ingress.kubernetes.io/backend-protocol: \"HTTPS\"\nspec:\n  ingressClassName: nginx\n  tls:\n    - hosts:\n      - argocd.reb.com\n      secretName: default-server-secret-argocd\n  rules:\n  - host: argocd.reb.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: argocd-server\n            port:\n              number: 80\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#8-tro-host-en-domain-cua-argocd-o-may-truy-cap","title":"8. Tr\u1ecf host \u0111\u1ebfn domain c\u1ee7a Argocd \u1edf m\u00e1y truy c\u1eadp","text":"<p>N\u1ebfu s\u1eed d\u1ee5ng window th\u00ec c\u00f3 th\u1ec3 v\u00e0o C:\\Windows\\System32\\drivers\\etc\\hosts th\u00eam d\u00f2ng:</p> <pre><code>192.168.1.50 argocd.reb.com\n</code></pre> <p>V\u00e0 l\u01b0u v\u1edbi quy\u1ec1n admin</p> <p></p> <p>L\u01b0u \u00fd</p> <p>L\u01b0u \u00fd, 192.168.1.50 l\u00e0 External IP c\u1ee7a ingress c\u1ee7a b\u00e0i vi\u1ebft tr\u01b0\u1edbc</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20argocd/#9-video-gioi-thieu","title":"9. Video gi\u1edbi thi\u1ec7u","text":"<p>T\u00e0i li\u1ec7u tham kh\u1ea3o</p> <ul> <li>Argo CD - Declarative GitOps CD for Kubernetes</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20ingress/","title":"C\u00e0i \u0111\u1eb7t Ingress Nginx","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20ingress/#1-gioi-thieu-ingress-nginx","title":"1. Gi\u1edbi thi\u1ec7u Ingress Nginx","text":"<p>Ingress Nginx l\u00e0 m\u1ed9t Ingress controller cho Kubernetes s\u1eed d\u1ee5ng NGINX nh\u01b0 m\u1ed9t reverse proxy v\u00e0 load balancer. Ingress l\u00e0 m\u1ed9t t\u00e0i nguy\u00ean trong Kubernetes cho ph\u00e9p qu\u1ea3n l\u00fd c\u00e1c k\u1ebft n\u1ed1i \u0111\u1ebfn c\u00e1c d\u1ecbch v\u1ee5 trong Kubernetes cluster. Ingress Nginx h\u1ed7 tr\u1ee3 kh\u1ea3 n\u0103ng c\u0103n b\u1eb1ng t\u1ea3i, SSL, URI rewrite v\u00e0 nhi\u1ec1u t\u00ednh n\u0103ng kh\u00e1c.</p> <p>Th\u01b0\u1eddng th\u00ec Ingress Nginx s\u1eed d\u1ee5ng \u0111\u1ec3 cho ph\u00e9p b\u00ean ngo\u00e0i truy c\u1eadp v\u00e0o \u1ee9ng d\u1ee5ng th\u00f4ng qua t\u00ean mi\u1ec1n v\u00ed d\u1ee5 nh\u01b0: app1.example.com, app2.example.com.</p> <p></p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20ingress/#2-cai-helm-neu-chua-co","title":"2. C\u00e0i helm n\u1ebfu ch\u01b0a c\u00f3","text":"<pre><code>curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20ingress/#3-cai-at-ingress-nginx-bang-helm","title":"3. C\u00e0i \u0111\u1eb7t Ingress Nginx b\u1eb1ng helm","text":"<p>C\u00f3 nhi\u1ec1u c\u00e1ch c\u00e0i Ingress nh\u01b0: HAProxy Ingress, NGINX Ingress Controller for Kubernetes,  Kong Ingress Controller for Kubernetes,...</p> <p>Trong b\u00e0i vi\u1ebft n\u00e0y s\u1ebd s\u1eed d\u1ee5ng Ingress NGINX Controller</p> <pre><code>helm upgrade --install ingress-nginx ingress-nginx \\\n  --repo https://kubernetes.github.io/ingress-nginx \\\n  --namespace ingress-nginx --create-namespace\n</code></pre> <p>Sau khi c\u00e0i \u0111\u1eb7t, ki\u1ec3m tra l\u1ea1i</p> <pre><code>kubectl get services -n ingress-nginx\n\nNAME                                 TYPE           CLUSTER-IP       EXTERNAL-IP    PORT(S)                      AGE\ningress-nginx-controller             LoadBalancer   10.103.11.172    &lt;none&gt;         80:32000/TCP,443:32748/TCP   17d\ningress-nginx-controller-admission   ClusterIP      10.107.107.210   &lt;none&gt;         443/TCP                      17d\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20ingress/#4-tai-lieu-tham-khao","title":"4. T\u00e0i li\u1ec7u tham kh\u1ea3o:","text":"<ul> <li>C\u00e0i \u0111\u1eb7t Metallb v\u00e0 Ingress Nginx tr\u00ean Bare metal Kubernetes cluster c\u1ee7a anh nvtienanh</li> <li>Ingress NGINX Controller</li> <li>Bare-metal considerations</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/","title":"C\u00e0i \u0111\u1eb7t Jenkins tr\u00ean K8S","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>Jenkins l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 CI/CD m\u00e3 ngu\u1ed3n m\u1edf ph\u1ed5 bi\u1ebfn, gi\u00fap t\u1ef1 \u0111\u1ed9ng h\u00f3a qu\u00e1 tr\u00ecnh build, test v\u00e0 deploy \u1ee9ng d\u1ee5ng. Vi\u1ec7c tri\u1ec3n khai Jenkins tr\u00ean Kubernetes gi\u00fap t\u1eadn d\u1ee5ng kh\u1ea3 n\u0103ng m\u1edf r\u1ed9ng, t\u1ef1 \u0111\u1ed9ng h\u00f3a v\u00e0 qu\u1ea3n l\u00fd t\u00e0i nguy\u00ean linh ho\u1ea1t c\u1ee7a K8S.</p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#2-cai-at-jenkins","title":"2. C\u00e0i \u0111\u1eb7t jenkins","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#21-tao-namespace-cho-jenkins","title":"2.1. T\u1ea1o namespace cho jenkins","text":"<pre><code>kubectl create namespace devops-tools\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#22-tao-pv-pvc-cho-jenkins","title":"2.2. T\u1ea1o PV &amp; PVC cho jenkins","text":"<p>Trong b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh d\u00f9ng NFS \u0111\u1ec3 l\u00e0m n\u01a1i l\u01b0u tr\u1eef d\u1eef li\u1ec7u c\u1ee7a jenkins</p> volume.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: jenkins-pv\n  namespace: devops-tools\nspec:\n  capacity:\n    storage: 20Gi\n  accessModes:\n    - ReadWriteMany\n  persistentVolumeReclaimPolicy: Retain\n  storageClassName: manual\n  nfs:\n    path: /mnt/nfs_share/jenkins\n    server: 192.168.1.110  # Thay b\u1eb1ng IP NFS Server\n    readOnly: false\n---\n\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: jenkins-pvc\n  namespace: devops-tools\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 20Gi\n  storageClassName: manual\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#23-cap-quyen-cho-jenkins","title":"2.3. C\u1ea5p quy\u1ec1n cho jenkins","text":"jenkins-01-serviceAccount.yaml<pre><code>---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: jenkins-admin\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"*\"]\n    verbs: [\"*\"]\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: jenkins-admin\n  namespace: devops-tools\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: jenkins-admin\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: jenkins-admin\nsubjects:\n- kind: ServiceAccount\n  name: jenkins-admin\n  namespace: devops-tools\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#24-tao-deployment-service-cho-jenkins","title":"2.4. T\u1ea1o Deployment &amp; Service cho jenkins","text":"deployment.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: jenkins\n  namespace: devops-tools\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: jenkins\n  template:\n    metadata:\n      labels:\n        app: jenkins\n    spec:\n      containers:\n      - name: jenkins\n        image: jenkins/jenkins:lts\n        ports:\n        - containerPort: 8080\n        - containerPort: 50000\n        volumeMounts:\n        - name: jenkins-storage\n          mountPath: /var/jenkins_home\n      volumes:\n      - name: jenkins-storage\n        persistentVolumeClaim:\n          claimName: jenkins-pvc\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: jenkins-service\n  namespace: devops-tools\nspec:\n  selector:\n    app: jenkins\n  ports:\n    - name: http\n      protocol: TCP\n      port: 8080\n      targetPort: 8080\n    - name: agent\n      protocol: TCP\n      port: 50000\n      targetPort: 50000\n  type: ClusterIP\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#25-tao-ingress-cho-jenkins","title":"2.5. T\u1ea1o Ingress cho jenkins","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: jenkins-ingress\n  namespace: devops-tools\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: jenkins.reb.com  # \u0110\u1ed5i th\u00e0nh domain c\u1ee7a b\u1ea1n\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: jenkins-service\n            port:\n              number: 8080\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#26-tro-host-en-domain-cua-jenkins-o-may-truy-cap","title":"2.6. Tr\u1ecf host \u0111\u1ebfn domain c\u1ee7a Jenkins \u1edf m\u00e1y truy c\u1eadp","text":"<p>N\u1ebfu s\u1eed d\u1ee5ng window th\u00ec c\u00f3 th\u1ec3 v\u00e0o C:\\Windows\\System32\\drivers\\etc\\hosts th\u00eam d\u00f2ng:</p> <pre><code>192.168.1.50 jenkins.reb.com\n</code></pre> <p>V\u00e0 l\u01b0u v\u1edbi quy\u1ec1n admin</p> <p></p>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#3-mo-khoa-jenkins","title":"3. M\u1edf kh\u00f3a Jenkins","text":"<p>Khi l\u1ea7n \u0111\u1ea7u v\u00e0o jenkins, b\u1ea1n s\u1ebd b\u1ecb y\u00eau c\u1ea7u m\u1edf kh\u00f3a jenkins</p> <p></p> <p>L\u1ea5y m\u1eadt kh\u1ea9u nh\u01b0 sau:</p> <pre><code>kubectl logs -n devops-tools -l app=jenkins | grep \"Please use the following password\"\n</code></pre> <p>ho\u1eb7c l\u1ea5y t\u1eeb log c\u1ee7a pod jenkins</p> <pre><code>kubectl get pods -n devops-tools\n</code></pre> <pre><code>kubectl logs jenkins-8497b4465d-lg9g6 -n devops-tools\n\n\n*************************************************************\n*************************************************************\n*************************************************************\n\nJenkins initial setup is required.\nAn admin user has been created and a password generated.\nPlease use the following password to proceed to installation:\n\n94b73ef6578c4b4692a157f768b2cfef\n\nThis may also be found at:\n/var/jenkins_home/secrets/initialAdminPassword\n\n*************************************************************\n*************************************************************\n*************************************************************\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20jenkins/#4-tai-lieu-tham-khao","title":"4. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Installing Jenkins Kubernetes</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20nfs/","title":"C\u00e0i \u0111\u1eb7t NFS server","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20nfs/#1-cai-at-nfs-server","title":"1. C\u00e0i \u0111\u1eb7t NFS Server","text":"<pre><code>sudo apt update\nsudo apt install -y nfs-kernel-server\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20nfs/#2-tao-thu-muc-chia-se","title":"2. T\u1ea1o th\u01b0 m\u1ee5c chia s\u1ebb","text":"<pre><code>sudo mkdir -p /mnt/nfs_share\nsudo chown nobody:nogroup /mnt/nfs_share\nsudo chmod 777 /mnt/nfs_share\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20nfs/#3-cau-hinh-nfs-export","title":"3. C\u1ea5u h\u00ecnh NFS Export","text":"<pre><code>sudo nano /etc/exports\n</code></pre> <pre><code>/mnt/nfs_share *(rw,sync,no_root_squash,no_subtree_check)\n</code></pre> <p>L\u01b0u \u00fd</p> <ul> <li>Cho ph\u00e9p t\u1ea5t c\u1ea3 c\u00e1c client truy c\u1eadp (c\u00f3 th\u1ec3 thay th\u1ebf b\u1eb1ng 192.168.1.0/24 \u0111\u1ec3 ch\u1ec9 cho ph\u00e9p subnet 192.168.1.x).</li> <li>rw \u2192 Cho ph\u00e9p \u0111\u1ecdc/ghi.</li> <li>sync \u2192 \u0110\u1ed3ng b\u1ed9 h\u00f3a d\u1eef li\u1ec7u ngay khi ghi.</li> <li>no_root_squash \u2192 Cho ph\u00e9p root tr\u00ean client c\u00f3 quy\u1ec1n root tr\u00ean NFS server.</li> <li>no_subtree_check \u2192 Tr\u00e1nh ki\u1ec3m tra to\u00e0n b\u1ed9 th\u01b0 m\u1ee5c con \u0111\u1ec3 t\u0103ng hi\u1ec7u su\u1ea5t.</li> <li>L\u01b0u v\u00e0 tho\u00e1t (Ctrl + X, nh\u1ea5n Y, r\u1ed3i Enter).</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20nfs/#4-ap-dung-cau-hinh-va-khoi-ong-dich-vu","title":"4. \u00c1p d\u1ee5ng c\u1ea5u h\u00ecnh v\u00e0 kh\u1edfi \u0111\u1ed9ng d\u1ecbch v\u1ee5","text":"<p>Ch\u1ea1y l\u1ec7nh sau \u0111\u1ec3 t\u1ea3i l\u1ea1i c\u1ea5u h\u00ecnh:</p> <pre><code>sudo exportfs -ra\nsudo systemctl restart nfs-kernel-server\nsudo systemctl enable nfs-kernel-server\n</code></pre> <p>Ki\u1ec3m tra tr\u1ea1ng th\u00e1i:</p> <pre><code>sudo systemctl status nfs-kernel-server\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/C%C3%A0i%20%C4%91%E1%BA%B7t%20nfs/#5-mo-firewall-neu-can","title":"5. M\u1edf firewall (n\u1ebfu c\u1ea7n)","text":"<pre><code>sudo ufw allow from 192.168.1.0/24 to any port 2049\nsudo ufw reload\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/L%C3%BD%20thuy%E1%BA%BFt/","title":"L\u00fd thuy\u1ebft K8S","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/L%C3%BD%20thuy%E1%BA%BFt/#1-cac-loai-service-trong-kubernetes-ngoai-nodeport","title":"1. C\u00e1c lo\u1ea1i Service trong Kubernetes (ngo\u00e0i NodePort)","text":"Lo\u1ea1i Service M\u00f4 t\u1ea3 Use case Kh\u1ea3 n\u0103ng truy c\u1eadp ClusterIP (default) Ch\u1ec9 truy c\u1eadp \u0111\u01b0\u1ee3c t\u1eeb b\u00ean trong cluster. Giao ti\u1ebfp n\u1ed9i b\u1ed9 gi\u1eefa c\u00e1c Pod N\u1ed9i b\u1ed9 cluster NodePort M\u1edf m\u1ed9t c\u1ed5ng c\u1ed1 \u0111\u1ecbnh tr\u00ean m\u1ed7i Node \u0111\u1ec3 truy c\u1eadp t\u1eeb b\u00ean ngo\u00e0i cluster Truy c\u1eadp service t\u1eeb b\u00ean ngo\u00e0i (debug/test) C\u1ed5ng node (IP:port) LoadBalancer C\u1ea5p m\u1ed9t \u0111\u1ecba ch\u1ec9 IP public th\u00f4ng qua cloud provider ho\u1eb7c MetalLB Truy c\u1eadp service t\u1eeb b\u00ean ngo\u00e0i (production) IP Public (Cloud/MetalLB) ExternalName Mapping DNS name \u0111\u1ebfn m\u1ed9t external service b\u00ean ngo\u00e0i Kubernetes K\u1ebft n\u1ed1i d\u1ecbch v\u1ee5 b\u00ean ngo\u00e0i (VD: DB, API) Chuy\u1ec3n h\u01b0\u1edbng DNS Headless Service (<code>ClusterIP: None</code>) Kh\u00f4ng t\u1ea1o IP \u1ea3o, ch\u1ec9 d\u00f9ng DNS \u0111\u1ec3 truy c\u1eadp tr\u1ef1c ti\u1ebfp t\u1eebng Pod StatefulSet, truy c\u1eadp t\u1eebng Pod tr\u1ef1c ti\u1ebfp DNS n\u1ed9i b\u1ed9 Ingress (kh\u00f4ng ph\u1ea3i Service tr\u1ef1c ti\u1ebfp) \u0110i\u1ec1u ph\u1ed1i truy c\u1eadp HTTP/HTTPS th\u00f4ng qua domain name Truy c\u1eadp nhi\u1ec1u service qua 1 IP ho\u1eb7c domain c\u00f4ng khai HTTP/HTTPS entrypoint <p>G\u1ee3i \u00fd s\u1eed d\u1ee5ng theo t\u00ecnh hu\u1ed1ng</p> <ul> <li>N\u1ed9i b\u1ed9 gi\u1eefa c\u00e1c Pod: <code>ClusterIP</code></li> <li>Truy c\u1eadp t\u1ea1m th\u1eddi (debug): <code>NodePort</code></li> <li>Tri\u1ec3n khai production (cloud ho\u1eb7c bare metal): <code>LoadBalancer</code> (k\u00e8m MetalLB n\u1ebfu on-premises)</li> <li>Truy c\u1eadp theo t\u00ean mi\u1ec1n: <code>Ingress</code></li> <li>K\u1ebft n\u1ed1i \u0111\u1ebfn API/DB b\u00ean ngo\u00e0i: <code>ExternalName</code></li> <li>\u1ee8ng d\u1ee5ng d\u1ea1ng Stateful (Zookeeper, Kafka\u2026): <code>Headless Service</code></li> </ul>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/Tips/","title":"M\u1eb9o K8S","text":""},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20K8S/Tips/#1-connection-is-unauthorized","title":"1. Connection is unauthorized","text":"<p>Issue: When working with Kubeadm cluster with Calico CNI plugin, the container fails to launch and if you describe the pod you may get the following error. Warning  FailedCreatePodSandBox  16m                 kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create pod network sandbox k8s_webserver-667ddc69b6-wq689_default_ffa6a237-7dc6-4bc4-9444-b0146a5b7f21_0(6dfe713911b0d60f98cf464a11928b041c885ff9dd3c59323ca5271be1df632b): error adding pod default_webserver-667ddc69b6-wq689 to CNI network \"k8s-pod-network\": plugin type=\"calico\" failed (add): error getting ClusterInformation: connection is unauthorized: Unauthorized</p> <p>This error can be rectified by restarting the Calico pods running in the kube-system namespace.</p> <p>Get the labels of calico pods using the following command.</p> <pre><code>kubectl get pods -n kube-system --show-labels\n</code></pre> <p>First delete all the calico pods using the following command.</p> <pre><code>kubectl delete pods -n kube-system -l k8s-app=calico-node\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/C%C3%A0i%20%C4%91%E1%BA%B7t%20ubuntu/C%C3%A0i%20%C4%91%E1%BA%B7t%20ubuntu/","title":"C\u00e0i \u0111\u1eb7t ubuntu","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/","title":"GitOps: Jenkins + Argocd + Github + Docker hub","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>GitOps l\u00e0 m\u1ed9t ph\u01b0\u01a1ng ph\u00e1p tri\u1ec3n khai v\u00e0 qu\u1ea3n l\u00fd h\u1ea1 t\u1ea7ng, \u1ee9ng d\u1ee5ng d\u1ef1a tr\u00ean Git. N\u00f3 s\u1eed d\u1ee5ng c\u00e1c c\u00f4ng c\u1ee5 CI/CD \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng h\u00f3a vi\u1ec7c tri\u1ec3n khai v\u00e0 \u0111\u1ed3ng b\u1ed9 h\u1ec7 th\u1ed1ng v\u1edbi tr\u1ea1ng th\u00e1i mong mu\u1ed1n \u0111\u01b0\u1ee3c l\u01b0u tr\u1eef trong Git repository</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#2-chuc-nang-cac-cong-cu-trong-gitops","title":"2. Ch\u1ee9c n\u0103ng c\u00e1c c\u00f4ng c\u1ee5 trong GitOps","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#21-github","title":"2.1. GitHub","text":"<ul> <li>Ch\u1ee9c n\u0103ng: L\u01b0u tr\u1eef m\u00e3 ngu\u1ed3n v\u00e0 c\u1ea5u h\u00ecnh Kubernetes (manifests, Helm charts).</li> <li>Vai tr\u00f2: GitHub l\u00e0 n\u01a1i ch\u1ee9a c\u1ea5u h\u00ecnh v\u00e0 t\u00e0i nguy\u00ean \u1ee9ng d\u1ee5ng.</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#22-jenkins","title":"2.2. Jenkins","text":"<ul> <li>Ch\u1ee9c n\u0103ng: T\u1ef1 \u0111\u1ed9ng h\u00f3a quy tr\u00ecnh build v\u00e0 deploy.</li> <li>Vai tr\u00f2: Jenkins x\u00e2y d\u1ef1ng \u1ee9ng d\u1ee5ng, t\u1ea1o Image Docker v\u00e0 \u0111\u1ea9y l\u00ean Docker Hub.</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#23-docker-hub","title":"2.3. Docker Hub","text":"<ul> <li>Ch\u1ee9c n\u0103ng: L\u01b0u tr\u1eef Image Docker.</li> <li>Vai tr\u00f2: Docker Hub l\u00e0 n\u01a1i l\u01b0u tr\u1eef Image Docker s\u1eb5n s\u00e0ng \u0111\u1ec3 tri\u1ec3n khai.</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#23-argocd","title":"2.3. ArgoCD","text":"<ul> <li>Ch\u1ee9c n\u0103ng: Tri\u1ec3n khai v\u00e0 qu\u1ea3n l\u00fd \u1ee9ng d\u1ee5ng tr\u00ean Kubernetes.</li> <li>Vai tr\u00f2: ArgoCD \u0111\u1ed3ng b\u1ed9 h\u00f3a tr\u1ea1ng th\u00e1i \u1ee9ng d\u1ee5ng trong Kubernetes v\u1edbi c\u1ea5u h\u00ecnh trong Git.</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/Gitops/#3-quy-trinh-gitops","title":"3. Quy tr\u00ecnh GitOps","text":"<ul> <li>Source code c\u1ee7a d\u1ef1 \u00e1n \u0111\u01b0\u1ee3c l\u01b0u \u1edf m\u1ed9t repo ri\u00eang, g\u1ecdi l\u00e0 source repo</li> <li>Ph\u1ea7n c\u1ea5u h\u00ecnh tri\u1ec3n khai \u1ee9ng d\u1ee5ng (helmchart hay k8s manifest files..) \u0111\u01b0\u1ee3c l\u01b0u \u1edf m\u1ed9t repo ri\u00eang, g\u1ecdi l\u00e0 config repo</li> <li>Lu\u1ed3ng CICD ho\u1ea1t \u0111\u1ed9ng theo tr\u00ecnh t\u1ef1:<ul> <li>Dev commit source code</li> <li>Jenkins build source code</li> <li>Jenkins Build Images</li> <li>Jenkins push image l\u00ean image registry</li> <li>Jenkins c\u1eadp nh\u1eadt th\u00f4ng tin phi\u00ean b\u1ea3n \u1ee9ng d\u1ee5ng v\u00e0o c\u00e1c file c\u1ea5u h\u00ecnh tri\u1ec3n khai \u1ee9ng d\u1ee5ng l\u01b0u tr\u00ean config repo</li> <li>ArgoCD ph\u00e1t hi\u1ec7n thay \u0111\u1ed5i tr\u00ean config repo th\u00ec c\u1eadp nh\u1eadt thay \u0111\u1ed5i v\u1ec1</li> <li>ArgoCD so s\u00e1nh th\u00f4ng tin c\u1ea5u h\u00ecnh m\u1edbi v\u1edbi c\u1ea5u h\u00ecnh hi\u1ec7n t\u1ea1i tr\u00ean h\u1ec7 th\u1ed1ng, n\u1ebfu ph\u00e1t hi\u1ec7n sai kh\u00e1c s\u1ebd c\u1ea3nh b\u00e1o v\u00e0 \u0111\u1ed3ng b\u1ed9 l\u1ea1i theo c\u1ea5u h\u00ecnh \u0111\u01b0\u1ee3c khai b\u00e1o v\u00e0 l\u01b0u tr\u00ean config repo</li> </ul> </li> </ul> <p>Ch\u00fa \u00fd</p> <p>C\u00f3 th\u1ec3 thay GitHub b\u1eb1ng Gitlab v\u00e0 Docker Hub b\u1eb1ng Harbor registry private ho\u1eb7c Gitlab registry \u0111\u1ec3 s\u1eed d\u1ee5ng registry ri\u00eang (private).</p> <p></p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/","title":"C\u1ea5u h\u00ecnh lu\u1ed3ng Argocd deploy l\u00ean k8s","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft tr\u01b0\u1edbc Jenkins \u0111\u00e3 l\u1ea5y source t\u1eeb github sau \u0111\u00f3 d\u00f9ng kaniko \u0111\u1ec3 build Dockerfile c\u00f3 trong source, sau \u0111\u00f3 \u0111\u1ea9y image l\u00ean docker hub, b\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u lu\u1ed3ng k\u1ebf ti\u1ebfp argocd d\u00f9ng image c\u1ee7a tr\u00ean docker hub \u0111\u1ec3 deployment \u1ee9ng d\u1ee5ng l\u00ean k8s</p> <p>Config repo: l\u00e0 n\u01a1i ch\u1ee9a c\u1ea5u h\u00ecnh \u0111\u1ec3 deployment \u1ee9ng d\u1ee5ng l\u00ean k8s</p> <p>Config repo source trong v\u00ed d\u1ee5: https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline-config</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#2-dung-helm-e-deployment-ung-dung-len-k8s-bang-argocd","title":"2. D\u00f9ng helm \u0111\u1ec3 deployment \u1ee9ng d\u1ee5ng l\u00ean k8s b\u1eb1ng argocd","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#21-tao-du-an-helm","title":"2.1. T\u1ea1o d\u1ef1 \u00e1n helm","text":"<pre><code>helm create complete-prodcution-e2e-pipeline-config\n</code></pre> <p>Ch\u01b0a c\u00e0i helm th\u00ec c\u00e0i</p> <p>https://github.com/helm/helm/releases</p> <p>S\u1eeda file values.yaml c\u1ee7a project helm complete-prodcution-e2e-pipeline-config c\u00e1c d\u00f2ng sau</p> values.yaml<pre><code># Default values for complete-prodcution-e2e-pipeline-config.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\nreplicaCount: 2\n\n# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/\nimage:\n  repository: thaiphuoc1997/testk8s\n  # This sets the pull policy for images.\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"latest\"\n\n# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: []\n# This is to override the chart name.\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Automatically mount a ServiceAccount's API credentials?\n  automount: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n# This is for setting Kubernetes Annotations to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ \npodAnnotations: {}\n# This is for setting Kubernetes Labels to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\npodLabels: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/\nservice:\n  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n  type: ClusterIP\n  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports\n  port: 8080\n\n# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/\ningress:\n  enabled: true\n  className: \"\"\n  annotations: {}\n    kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: test.reb.com\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nlivenessProbe:\n  httpGet:\n    path: /\n    port: http\nreadinessProbe:\n  httpGet:\n    path: /\n    port: http\n\n#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 10\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\n# Additional volumes on the output Deployment definition.\nvolumes: []\n# - name: foo\n#   secret:\n#     secretName: mysecret\n#     optional: false\n\n# Additional volumeMounts on the output Deployment definition.\nvolumeMounts: []\n# - name: foo\n#   mountPath: \"/etc/foo\"\n#   readOnly: true\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#22-tao-access-key-e-truy-cap-github","title":"2.2. T\u1ea1o access key \u0111\u1ec3 truy c\u1eadp github","text":"<p>V\u00e0o th\u00f4ng tin user \u1edf g\u00f3c tr\u00ean b\u00ean ph\u1ea3i ch\u1ecdn Setting \u21d2 Developer settings (Ho\u1eb7c truy c\u1eadp th\u1eb3ng v\u00e0o link: https://github.com/settings/tokens)</p> <p>Ch\u1ecdn Generate new token \u21d2 Generate new token (classic) \u21d2 \u0110\u1eb7t t\u00ean token v\u00e0 tick ch\u1ecdn v\u00e0o m\u1ee5c repo \u21d2 Generate token \u21d2 L\u01b0u l\u1ea1i token v\u1eeba sinh ra \u0111\u1ec3 s\u1eed d\u1ee5ng</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#23-khai-bao-repository-chua-config-repo-vao-argocd","title":"2.3. Khai b\u00e1o repository ch\u1ee9a config repo v\u00e0o argocd","text":"<p>T\u1eeb web c\u1ee7a argocd v\u00e0o Settings \u2192 Repositories \u2192 Connect repo \u2192 via HTTPS v\u00e0 c\u1ea5u h\u00ecnh c\u00e1c tham s\u1ed1 nh\u01b0 sau:</p> <ul> <li>Choose your connection method: =&gt; VIA HTTPS</li> <li>Type =&gt; Git</li> <li>Project =&gt; default</li> <li>Repository URL: \u0110i\u1ec1n th\u00f4ng tin repo \u0111\u00e3 t\u1ea1o \u1edf b\u00ean tr\u00ean  https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline-config</li> <li>Username/Password: \u0110i\u1ec1n th\u00f4ng tin account, password l\u00e0 token t\u1ea1o b\u00ean tr\u00ean.</li> </ul> <p></p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#24-khai-bao-ung-dung-tren-argocd","title":"2.4. Khai b\u00e1o \u1ee9ng d\u1ee5ng tr\u00ean ArgoCD","text":"<p>Khai b\u00e1o application: T\u1eeb web c\u1ee7a argocd v\u00e0o Applications \u2192 New App v\u00e0 \u0111i\u1ec1n c\u00e1c tham s\u1ed1 nh\u01b0 sau:</p> <p>GENERAL:</p> <ul> <li>Application Name: \u0110i\u1ec1n t\u00ean c\u1ee7a Application, v\u00ed d\u1ee5 test-api</li> <li>Project Name: Default</li> <li>SYNC POLICY: Manual. \u1ede \u0111\u00e2y c\u00f3 2 option l\u00e0 Manual ho\u1eb7c Auto-sync</li> </ul> <p>Ch\u00fa \u00fd</p> <ul> <li>Auto-sync: Khi ph\u00e1t hi\u1ec7n s\u1ef1 b\u1ea5t \u0111\u1ed3ng b\u1ed9 gi\u1eefa c\u1ea5u h\u00ecnh th\u1ef1c t\u1ebf (tr\u00ean K8S) so v\u1edbi \u0111\u1ecbnh ngh\u0129a (tr\u00ean config repo th\u00ec Argo th\u1ef1c hi\u1ec7n t\u1ef1 \u0111\u1ed9ng vi\u1ec7c c\u1eadp nh\u1eadt c\u1ea5u h\u00ecnh c\u00e1c resource tr\u00ean K8S theo \u0111\u00fang c\u1ea5u h\u00ecnh \u0111\u00e3 \u0111\u1ecbnh ngh\u0129a</li> <li>Manual Khi ph\u00e1t hi\u1ec7n b\u1ea5t \u0111\u1ed9ng b\u1ed9 th\u00ec ArgoCD s\u1ebd ch\u1ec9 c\u1ea3nh b\u00e1o l\u00ean c\u00e1c resource b\u1ecb m\u1ea5t \u0111\u1ed3ng b\u1ed9 (out of sync) v\u00e0 b\u1ea1n mu\u1ed1n \u0111\u1ed3ng b\u1ed9 l\u1ea1i th\u00ec c\u1ea7n ph\u1ea3i ch\u1ecdn v\u00e0o n\u00fat sync \u0111\u1ec3 \u0111\u1ed3ng b\u1ed9 l\u1ea1i.</li> </ul> <p>SOURCE:</p> <ul> <li>Repository URL: https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline-config</li> <li>Path: . -&gt; \u0110\u00e2y l\u00e0 th\u01b0 m\u1ee5c ch\u1ee9a helmchart c\u1ee7a ch\u00fang ta</li> </ul> <p>DESTINATION:</p> <ul> <li>Cluster URL: https://kubernetes.default.svc</li> <li>Namespace: test-api</li> </ul> <p>Ch\u00fa \u00fd</p> <p>Namespace: test-api c\u1ea7n t\u1ea1o tr\u01b0\u1edbc</p> <p>Helm:</p> <p>VALUES FILES: ch\u1ecdn values.yaml</p> <p></p> <p>C\u00f3 th\u1ec3 ch\u1ea1y argocd-test-config.yaml b\u00ean d\u01b0\u1edbi thay v\u00ec c\u1ea5u h\u00ecnh b\u1eb1ng giao di\u1ec7n \u1edf tr\u00ean</p> argocd-test-config.yaml<pre><code>project: default\nsource:\n  repoURL: https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline-config.git\n  path: .\n  targetRevision: HEAD\n  helm:\n    valueFiles:\n      - values.yaml\ndestination:\n  server: https://kubernetes.default.svc\n  namespace: test-api\nsyncPolicy:\n  automated: {}\n</code></pre> <pre><code>kubectl apply -f argocd-test-config.yaml\n</code></pre> <p>Ch\u00fang ta c\u00f3 th\u1ec3 \u1ea5n SYNC \u0111\u1ec3 \u0111\u1ed3ng b\u1ed9 tr\u1ea1ng th\u00e1i tr\u00ean k8s v\u1edbi tr\u00ean git</p> <p></p> <p>K\u1ebft qu\u1ea3 sau khi sync th\u00e0nh c\u00f4ng, \u1ee9ng d\u1ee5ng \u1edf tr\u1ea1ng th\u00e1i \"Synced\":</p> <p></p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#25-tro-host-en-domain-cua-app-test-o-may-truy-cap","title":"2.5. Tr\u1ecf host \u0111\u1ebfn domain c\u1ee7a App test \u1edf m\u00e1y truy c\u1eadp","text":"<p>N\u1ebfu s\u1eed d\u1ee5ng window th\u00ec c\u00f3 th\u1ec3 v\u00e0o C:\\Windows\\System32\\drivers\\etc\\hosts th\u00eam d\u00f2ng:</p> <pre><code>192.168.1.50 test123.reb.com\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#26-test-goi-uong-dan-test123rebcom-se-thay-trang-web-test-hien-len-nhu-sau","title":"2.6. Test g\u1ecdi \u0111\u01b0\u1eddng d\u1eabn test123.reb.com s\u1ebd th\u1ea5y trang web test hi\u1ec7n l\u00ean nh\u01b0 sau","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/argocd-deploy/#3-tai-lieu-tham-khao","title":"3. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>X\u00e2y d\u1ef1ng lu\u1ed3ng Gitops v\u1edbi Jenkins v\u00e0 ArgoCD</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/full-jenkins-argocd/","title":"To\u00e0n lu\u1ed3ng Jenkins + Argocd + Github + Docker hub tr\u00ean k8s","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/full-jenkins-argocd/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft tr\u01b0\u1edbc Jenkins \u0111\u00e3 l\u1ea5y source t\u1eeb github sau \u0111\u00f3 d\u00f9ng kaniko \u0111\u1ec3 build Dockerfile c\u00f3 trong source, sau \u0111\u00f3 \u0111\u1ea9y image l\u00ean docker hub, v\u00e0 argocd d\u00f9ng image c\u1ee7a tr\u00ean docker hub \u0111\u1ec3 deployment \u1ee9ng d\u1ee5ng l\u00ean k8s. B\u00e0i vi\u1ebft n\u00e0y m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u k\u1ebft h\u1ee3p to\u00e0n tr\u00ecnh lu\u1ed3ng gitops: Jenkins + Argocd + Github + Docker hub tr\u00ean k8s.</p> <p>\u00dd t\u01b0\u1edfng l\u00e0 d\u00f9ng Jenkins l\u1ea5y source sau \u0111\u00f3 d\u00f9ng kaniko build Dockerfile v\u00e0 \u0111\u1ea9y l\u00ean docker hub l\u00ean version m\u1edbi, sau \u0111\u00f3 ch\u1ec9nh version c\u1ee7a tag image trong values trong repo config. Argocd s\u1ebd theo d\u00f5i thay \u0111\u1ed5i c\u1ee7a repo config \u0111\u1ec3 deployment \u1ee9ng d\u1ee5ng l\u00ean k8s</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/full-jenkins-argocd/#2-cai-at","title":"2. C\u00e0i \u0111\u1eb7t","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/full-jenkins-argocd/#21-cau-hinh-jenkins","title":"2.1. C\u1ea5u h\u00ecnh jenkins","text":"<p>M\u00e3 ngu\u1ed3n github: https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline.git</p> <p>C\u1ea5u h\u00ecnh jenkins gi\u1ed1ng b\u00e0i vi\u1ebft Jenkins Build Docker image v\u00e0 push l\u00ean Docker Hub, ch\u1ec9 c\u1ea7n thay \u0111\u1ed5i l\u1ea1i c\u1ea5u h\u00ecnh Script Path s\u1eed d\u1ee5ng \"Jenkinsfile-k8s-full\" trong https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline.git</p> <p></p> Jenkinsfile-k8s-full<pre><code>def appConfigRepo = 'https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline-config.git'\ndef appConfigBranch = 'main'\n\ndef helmRepo = \"complete-prodcution-e2e-pipeline-config\"\ndef helmValueFile = \"values.yaml\"\n\npipeline {\n    agent any\n\n    environment {\n        BUILD_NUMBER = \"${env.BUILD_NUMBER}\"\n        version = \"v1.${BUILD_NUMBER}\"\n        DOCKER_IMAGE_NAME = \"thaiphuoc1997/testk8s\"\n        DOCKER_IMAGE = \"${DOCKER_IMAGE_NAME}:${version}\"\n    }\n\n    options {\n        skipDefaultCheckout()\n    }\n\n    parameters {\n        string(name: 'GIT_URL', defaultValue: 'https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline.git', description: 'The URL of the source Git repository to use.')\n        string(name: 'GIT_BRANCH', defaultValue: 'main', description: 'The branch in the source Git repository to use.')\n    }\n\n    stages {\n        stage(\"Checkout\") {\n            steps {\n                checkout(changelog: false, poll: false, scm: [\n                    $class: 'GitSCM',\n                    branches: [[name: params.GIT_BRANCH]],\n                    doGenerateSubmoduleConfigurations: false,\n                    submoduleCfg: [],\n                    userRemoteConfigs: [[url: params.GIT_URL]],\n                ])\n                stash name: 'sources', includes: '**', excludes: '**/.git,**/.git/**'\n            }\n        }\n\n        stage(\"Build And Push Docker Image\") {\n            agent {\n                label 'docker-build'\n            }\n            steps {\n                unstash 'sources'\n                container(name: 'kaniko') {\n                    sh '/kaniko/executor --context=`pwd` --dockerfile=`pwd`/Dockerfile --destination=${DOCKER_IMAGE}'\n                }\n            }\n        }\n\n        stage('Update version in helm-chart') {\n            steps {\n                withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {\n                    sh \"\"\"#!/bin/bash\n                        set -e\n\n                        [[ -d ${helmRepo} ]] &amp;&amp; rm -rf ${helmRepo}\n\n                        git clone ${appConfigRepo} --branch ${appConfigBranch}\n                        cd ${helmRepo}\n\n                        # C\u1eadp nh\u1eadt tag v\u1edbi version\n                        sed -i \"s|  tag: .*|  tag: \\\\\\\"${version}\\\\\\\"|\" ${helmValueFile}\n\n                        git config user.name \"vanphuoc9\"\n                        git config user.email \"thaiphuoc1997@gmail.com\"\n\n                        git add .\n                        git commit -m \"Update to version ${version}\" || echo \"No changes to commit\"\n                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/vanphuoc9/complete-prodcution-e2e-pipeline-config.git\n\n                        cd ..\n                        rm -rf ${helmRepo}\n                    \"\"\"\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/Gitops/full-jenkins-argocd/#22-cau-hinh-argocd","title":"2.2. C\u1ea5u h\u00ecnh Argocd","text":"<p>C\u1ea5u h\u00ecnh Argocd gi\u1ed1ng b\u00e0i vi\u1ebft C\u1ea5u h\u00ecnh lu\u1ed3ng Argocd deploy l\u00ean k8s</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/full-jenkins-argocd/#3-tai-lieu-tham-khao","title":"3. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>X\u00e2y d\u1ef1ng lu\u1ed3ng Gitops v\u1edbi Jenkins v\u00e0 ArgoCD</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/","title":"C\u1ea5u h\u00ecnh lu\u1ed3ng Jenkins Build Docker image v\u00e0 push l\u00ean Docker Hub","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>Trong b\u00e0i vi\u1ebft n\u00e0y ch\u00fang ta s\u1ebd c\u00f9ng nhau t\u00ecm hi\u1ec3u c\u00e1ch build docker image tr\u00ean con Jenkins n\u00e0y b\u1eb1ng c\u00f4ng c\u1ee5 Kaniko.</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#11-run-docker-in-a-docker-container","title":"1.1. Run Docker in a Docker Container","text":"<p>Nh\u01b0 ch\u00fang ta \u0111\u00e3 bi\u1ebft, th\u00ec b\u1ea3n ch\u1ea5t c\u1ee7a vi\u1ec7c deploy Jenkins tr\u00ean c\u1ee5m Kubernetes l\u00e0 ch\u00fang ta ch\u1ea1y Jenkins master \u1edf dang 1 docker container (pod) v\u00e0 c\u00e1c Agent s\u1ebd \u0111\u01b0\u1ee3c t\u1ea1o khi c\u00e1c pipeline chay. Agent ch\u00ednh l\u00e0 docker container \u0111\u01b0\u1ee3c \u0111\u00f3ng g\u00f3i trong pod.</p> <p>Nh\u01b0 v\u1eady n\u1ebfu Pipeline c\u1ee7a ch\u00fang ta ch\u1ea1y task build docker image ch\u1eb3ng h\u1ea1n, th\u00ec s\u1ebd ph\u00e1t sinh ra v\u1ea5n \u0111\u1ec1 docker container c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u01b0\u1ee3c c\u00e1c l\u1ec7nh docker \u0111\u1ec3 l\u00e0m nhi\u1ec7m v\u1ee5 build docker image kh\u00e1c.</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#12-kaniko","title":"1.2. Kaniko","text":"<p>Kaniko l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 m\u00e3 ngu\u1ed3n m\u1edf d\u00f9ng \u0111\u1ec3 x\u00e2y d\u1ef1ng c\u00e1c image Docker t\u1eeb m\u1ed9t Dockerfile m\u00e0 kh\u00f4ng c\u1ea7n s\u1eed d\u1ee5ng daemon Docker. Kaniko c\u00f3 th\u1ec3 ch\u1ea1y tr\u00ean b\u1ea5t k\u1ef3 n\u1ec1n t\u1ea3ng n\u00e0o h\u1ed7 tr\u1ee3 container, nh\u01b0 Kubernetes, Google Cloud Build, Tekton, Jenkins, GitLab v\u00e0 nhi\u1ec1u h\u01a1n n\u1eefa. Kaniko gi\u1ea3i quy\u1ebft v\u1ea5n \u0111\u1ec1 v\u1ec1 b\u1ea3o m\u1eadt v\u00e0 hi\u1ec7u su\u1ea5t khi x\u00e2y d\u1ef1ng c\u00e1c image Docker tr\u00ean m\u00f4i tr\u01b0\u1eddng c\u1ee7a container.</p> <p>M\u1ed9t s\u1ed1 t\u00ednh n\u0103ng ch\u00ednh c\u1ee7a Kaniko</p> <ul> <li>H\u1ed7 tr\u1ee3 x\u00e2y d\u1ef1ng c\u00e1c image Docker t\u1eeb c\u00e1c ngu\u1ed3n kh\u00e1c nhau, nh\u01b0 local directory, Git repository, Google Cloud Storage, Amazon S3, v.v. </li> <li>H\u1ed7 tr\u1ee3 \u0111\u1ea9y c\u00e1c image Docker l\u00ean c\u00e1c kho l\u01b0u tr\u1eef kh\u00e1c nhau, nh\u01b0 Docker Hub, Google Container Registry, Amazon Elastic Container Registry, v.v.</li> <li>H\u1ed7 tr\u1ee3 s\u1eed d\u1ee5ng c\u00e1c bi\u1ebfn m\u00f4i tr\u01b0\u1eddng, c\u00e1c tham s\u1ed1 build-time v\u00e0 c\u00e1c file c\u1ea5u h\u00ecnh \u0111\u1ec3 t\u00f9y bi\u1ebfn qu\u00e1 tr\u00ecnh x\u00e2y d\u1ef1ng image</li> <li>H\u1ed7 tr\u1ee3 s\u1eed d\u1ee5ng cache \u0111\u1ec3 t\u0103ng t\u1ed1c \u0111\u1ed9 x\u00e2y d\u1ef1ng image v\u00e0 gi\u1ea3m dung l\u01b0\u1ee3ng image</li> <li>H\u1ed7 tr\u1ee3 x\u00e2y d\u1ef1ng c\u00e1c image \u0111a t\u1ea7ng (multi-stage) v\u00e0 k\u1ebf th\u1eeba t\u1eeb c\u00e1c image kh\u00e1c</li> <li>H\u1ed7 tr\u1ee3 ki\u1ec3m tra t\u00ednh h\u1ee3p l\u1ec7 c\u1ee7a Dockerfile v\u00e0 th\u00f4ng b\u00e1o l\u1ed7i n\u1ebfu c\u00f3</li> </ul>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#2-cau-hinh-cai-at","title":"2. C\u1ea5u h\u00ecnh c\u00e0i \u0111\u1eb7t","text":""},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#21-cai-plugins-tren-jenkins","title":"2.1. C\u00e0i plugins tr\u00ean jenkins","text":"<p>V\u00e0o Dashboard &gt; Manage &gt; Jenkins &gt; Plugins</p> <p>C\u00e0i c\u00e1c plugin sau:</p> <ul> <li>Kubernetes plugin</li> <li>Docker plugin</li> </ul> <p></p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#22-cau-hinh-clouds-o-jenkins","title":"2.2. C\u1ea5u h\u00ecnh clouds \u1edf jenkins","text":"<p>V\u00e0o Dashboard &gt; Manage Jenkins &gt; Clouds</p> <p>N\u1ebfu ch\u01b0a c\u00f3 Clouds, th\u00ec ch\u1ecdn \"New cloud\" \u0111\u1ec3 th\u00eam m\u1edbi</p> <p></p> <p>V\u00ed d\u1ee5 t\u00ean \"kubernetes default\" v\u00e0 ch\u1ecdn type \"Kubernetes\"</p> <p></p> <p>Ti\u1ebfp t\u1ee5c v\u00e0o Dashboard &gt; Manage Jenkins &gt; Clouds &gt; kubernetes default &gt; Configure</p> <p>C\u1ea5u h\u00ecnh c\u00e1c tham s\u1ed1 sau:</p> <ul> <li>Name: kubernetes default</li> <li>Kubernetes URL: https://kubernetes.default.svc</li> <li>Kubernetes Namespace: devops-tools</li> <li>Jenkins URL: http://jenkins-service:8080</li> </ul> <p>Trong \u0111\u00f3</p> <ul> <li>Name l\u00e0 t\u00ean</li> <li>Kubernetes URL: l\u00e0 \u0111\u01b0\u1eddng d\u1eabn c\u1ee7a Kubernetes</li> <li>Kubernetes Namespace: l\u00e0 namespace c\u1ee7a jenkins \u0111\u01b0\u1ee3c c\u00e0i \u0111\u1eb7t</li> <li>Jenkins URL: l\u00e0 \u0111\u01b0\u1eddng d\u1eabn c\u1ee7a service jenkins \u0111\u01b0\u1ee3c c\u00e0i \u1edf file deployment.yaml \u1edf b\u00e0i vi\u1ebft c\u00e0i jenkins (The URL of the Jenkins Controller server.)</li> </ul> <p></p> <p></p> <p>Ti\u1ebfp t\u1ee5c v\u00e0o Dashboard &gt; Manage Jenkins &gt; Clouds &gt; kubernetes default &gt; Pod Templates</p> <p>Th\u00eam Add a pod template n\u1ebfu ch\u01b0a c\u00f3</p> <p>C\u1ea5u h\u00ecnh c\u00e1c tham s\u1ed1 sau:</p> <ul> <li>Name: kaniko</li> <li>Namespace: devops-tools</li> <li>Labels: docker-build</li> <li> <p>Usage: Use this node as much as possible</p> </li> <li> <p>Container Template:</p> <ul> <li>C\u1ea5u h\u00ecnh jnlp:<ul> <li>Name: jnlp</li> <li>Docker image: jenkins/inbound-agent:alpine</li> <li>Working directory: /home/jenkins/agent</li> <li>Command to run: \u0111\u1ec3 tr\u1ed1ng</li> <li>Arguments to pass to the command: tr\u1ed1ng</li> <li>Allocate pseudo-TTY: Kh\u00f4ng t\u00edch</li> </ul> </li> <li>C\u1ea5u h\u00ecnh kaniko:</li> <li>Name: kaniko</li> <li>Docker image: gcr.io/kaniko-project/executor:debug</li> <li>Working directory: /home/jenkins/agent</li> <li>Command to run: /busybox/cat</li> <li>Arguments to pass to the command: Tr\u1ed1ng </li> <li>Allocate pseudo-TTY: T\u00edch</li> </ul> </li> <li> <p>Volumes:</p> <ul> <li>Secret Volume:<ul> <li>Secret name: kaniko-secret</li> <li>Mount path: /kaniko/.docker</li> </ul> </li> </ul> </li> </ul> <p></p> <p></p> <p></p> <p></p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#23-cau-hinh-secret-cho-kaniko","title":"2.3. C\u1ea5u h\u00ecnh secret cho kaniko","text":"config.json<pre><code>{\n    \"auths\": {\n      \"https://index.docker.io/v1/\": {\n        \"auth\": \"XXXXXXXXXXXXXXXX\"\n      }\n    }\n  }\n</code></pre> <p>Trong \u0111\u00f3</p> <p>\"auth\" c\u00f3 c\u1ea5u tr\u00fac nh\u01b0 sau: base64(username:Personal access tokens c\u1ee7a docker hub). V\u00ed d\u1ee5 username l\u00e0 thaiphuoc1997, Personal access tokens c\u1ee7a docker hub l\u00e0 ABC123  Th\u00ec base64(thaiphuoc1997:ABC123) l\u00e0 dGhhaXBodW9jMTk5NzpBQkMxMjM=</p> <p>L\u1ea5y Personal access tokens c\u1ee7a docker hub \u0111\u01b0\u1ee3c l\u1ea5y t\u1ea1i personal-access-tokens</p> <p>Sau \u0111\u00f3 tr\u00ean k8s ch\u1ea1y l\u1ec7nh</p> <pre><code>kubectl -n devops-tools create secret generic kaniko-secret --from-file=config.json\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#24-tich-hop-vao-jenkin-pipeline","title":"2.4. T\u00edch h\u1ee3p v\u00e0o Jenkin pipeline","text":"<p>M\u00e3 ngu\u1ed3n github: https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline.git</p> <p>D\u01b0\u1edbi \u0111\u00e2y m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u v\u00ed d\u1ee5 \u0111\u01a1n gi\u1ea3n:</p> <p>Ch\u00fang ta c\u1ea7n t\u1ea1o 1 project, v\u1edbi c\u00e1c th\u00f4ng s\u1ed1 c\u1ea5u h\u00ecnh nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p>C\u00e1c b\u01b0\u1edbc \u0111\u01a1n gi\u1ea3n:</p> <ul> <li>Checkout source code t\u1eeb git</li> <li>Ch\u1ea1y pipeline v\u1edbi c\u1ea5u h\u00ecnh \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp trong Jenkinsfile</li> </ul> Jenkinsfile-k8s-test<pre><code>pipeline {\n    agent any\n    options {\n        skipDefaultCheckout()\n    }\n    parameters {\n        string(name:'GIT_URL', defaultValue:'https://github.com/vanphuoc9/complete-prodcution-e2e-pipeline.git', description:'The URL of the source Git repository to use.')\n        string(name:'GIT_BRANCH', defaultValue:'main', description:'The branch in the source Git repository to use.')\n    }\n    stages {\n        stage(\"Checkout\") {\n            steps {\n                checkout(changelog: false, poll: false, scm: [\n                    $class: 'GitSCM',\n                    branches: [\n                        [name: params.GIT_BRANCH],\n                    ],\n                    doGenerateSubmoduleConfigurations: false,\n                    submoduleCfg: [],\n                    userRemoteConfigs: [\n                        [\n                            url: params.GIT_URL,\n                        ],\n                    ],\n                ])\n                stash name: 'sources', includes: '**', excludes: '**/.git,**/.git/**'\n            }\n        }\n        stage(\"Build docker\") {\n            agent {\n                label 'docker-build'\n            }\n            steps {\n                unstash 'sources'\n                container(name: 'kaniko') {\n                    sh '/kaniko/executor --context=`pwd` --dockerfile=`pwd`/Dockerfile  --destination=thaiphuoc1997/testk8s:latest'\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#25-ket-qua-build-jenkins","title":"2.5. K\u1ebft qu\u1ea3 build jenkins","text":"<pre><code>.....\nDownloaded from central: https://repo.maven.apache.org/maven2/org/eclipse/aether/aether-util/1.0.0.v20140518/aether-util-1.0.0.v20140518.jar (146 kB at 2.4 MB/s)\n[INFO] Installing /app/pom.xml to /root/.m2/repository/com/dmancloud/dinesh/demoapp/1.0.0/demoapp-1.0.0.pom\n[INFO] Installing /app/target/demoapp.jar to /root/.m2/repository/com/dmancloud/dinesh/demoapp/1.0.0/demoapp-1.0.0.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  29.048 s\n[INFO] Finished at: 2025-04-02T14:34:19Z\n[INFO] ------------------------------------------------------------------------\n\u001b[36mINFO\u001b[0m[0055] Taking snapshot of full filesystem...        \n\u001b[36mINFO\u001b[0m[0062] Saving file app/target/demoapp.jar for later use \n\u001b[36mINFO\u001b[0m[0062] Deleting filesystem...                       \n\u001b[36mINFO\u001b[0m[0063] Retrieving image manifest eclipse-temurin:17.0.6_10-jdk \n\u001b[36mINFO\u001b[0m[0063] Returning cached image manifest              \n\u001b[36mINFO\u001b[0m[0063] Executing 0 build triggers                   \n\u001b[36mINFO\u001b[0m[0063] Building stage 'eclipse-temurin:17.0.6_10-jdk' [idx: '1', base-idx: '-1'] \n\u001b[36mINFO\u001b[0m[0063] Unpacking rootfs as cmd COPY --from=build /app/target/demoapp.jar /app/ requires it. \n\u001b[36mINFO\u001b[0m[0078] WORKDIR /app                                 \n\u001b[36mINFO\u001b[0m[0078] Cmd: workdir                                 \n\u001b[36mINFO\u001b[0m[0078] Changed working directory to /app            \n\u001b[36mINFO\u001b[0m[0078] Creating directory /app with uid -1 and gid -1 \n\u001b[36mINFO\u001b[0m[0078] Taking snapshot of files...                  \n\u001b[36mINFO\u001b[0m[0078] COPY --from=build /app/target/demoapp.jar /app/ \n\u001b[36mINFO\u001b[0m[0078] Taking snapshot of files...                  \n\u001b[36mINFO\u001b[0m[0078] EXPOSE 8080                                  \n\u001b[36mINFO\u001b[0m[0078] Cmd: EXPOSE                                  \n\u001b[36mINFO\u001b[0m[0078] Adding exposed port: 8080/tcp                \n\u001b[36mINFO\u001b[0m[0078] CMD [\"java\", \"-jar\",\"demoapp.jar\"]           \n\u001b[36mINFO\u001b[0m[0078] Pushing image to thaiphuoc1997/testk8s:latest \n\u001b[36mINFO\u001b[0m[0101] Pushed index.docker.io/thaiphuoc1997/testk8s@sha256:e1b75b3a4a1356d44a747e0d7092e99273ff607b473bf6d9945a28ab685db1ed \n[Pipeline] }\n[Pipeline] // container\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] }\n[Pipeline] // stage\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n</code></pre> <p>K\u1ebft qu\u1ea3 jenkins \u0111\u00e3 build source v\u00e0 \u0111\u1ea9y th\u00e0nh c\u00f4ng image l\u00ean docker hub</p> <p></p> <p>Nh\u01b0 v\u1eady jenkins \u0111\u00e3 l\u1ea5y source t\u1eeb github sau \u0111\u00f3 d\u00f9ng kaniko \u0111\u1ec3 build Dockerfile c\u00f3 trong source, sau \u0111\u00f3 \u0111\u1ea9y image l\u00ean docker hub, b\u00e0i vi\u1ebft k\u1ebf ti\u1ebfp m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u lu\u1ed3ng k\u1ebf ti\u1ebfp argocd d\u00f9ng image c\u1ee7a tr\u00ean docker hub \u0111\u1ec3 deployment \u1ee9ng d\u1ee5ng l\u00ean k8s</p>"},{"location":"Kubernetes%20%28K8s%29/Gitops/jenkins-build-image/#3-tai-lieu-tham-khao","title":"3. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Jenkins tr\u00ean Kubernetes: Build docker image b\u1eb1ng Kaniko</li> <li>How to Install Jenkins in Kubernetes with Kaniko for Container Building</li> </ul>"},{"location":"Li%C3%AAn%20h%E1%BB%87/","title":"\ud83d\ude80 H\u1ee3p t\u00e1c &amp; Th\u1ef1c hi\u1ec7n D\u1ef1 \u00e1n","text":"<p>M\u00ecnh cung c\u1ea5p c\u00e1c gi\u1ea3i ph\u00e1p bao g\u1ed3m: \u2705 Ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m web \u2705 Ph\u00e1t tri\u1ec3n ph\u1ea7n m\u1ec1m di \u0111\u1ed9ng </p>"},{"location":"Li%C3%AAn%20h%E1%BB%87/#lien-he-ngay-e-hop-tac","title":"\ud83d\udce9 Li\u00ean h\u1ec7 ngay \u0111\u1ec3 h\u1ee3p t\u00e1c","text":"<p>\ud83d\udce7 Email: thaiphuoc1997@gmail.com \ud83d\udcf1 Telegram: @tvphuoctgg \ud83d\udcde Zalo/S\u0110T: 0886979802 </p> <p>Ch\u00fang t\u00f4i lu\u00f4n s\u1eb5n s\u00e0ng h\u1ed7 tr\u1ee3 v\u00e0 \u0111\u1ed3ng h\u00e0nh c\u00f9ng b\u1ea1n trong m\u1ecdi d\u1ef1 \u00e1n! \ud83d\ude80</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/","title":"C\u00e0i \u0111\u1eb7t Kubernetes cluster 1 master, 2 worker tr\u00ean Ubuntu 24.04","text":""},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#gioi-thieu","title":"Gi\u1edbi thi\u1ec7u","text":"<p>C\u00f3 nhi\u1ec1u c\u00e1ch \u0111\u1ec3 c\u00e0i \u0111\u1eb7t k8s, trong t\u00e0i li\u1ec7u n\u00e0y gi\u1edbi thi\u1ec7u c\u00e0i \u0111\u1eb7t th\u1ee7 c\u00f4ng k8s tr\u00ean ubuntu 24.04 \u0111\u1ec3 g\u1ea7n v\u1edbi m\u00f4i tr\u01b0\u1eddng production nh\u1ea5t</p>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#yeu-cau-he-thong","title":"Y\u00eau c\u1ea7u h\u1ec7 th\u1ed1ng","text":"<p>Trong m\u00f4i tr\u01b0\u1eddng th\u1eed nghi\u1ec7m:</p> <ul> <li>HP 240 GM Notebook Intel core I5 2.4Ghz, Ram: 16GB: C\u00e0i \u0111\u1eb7t 4 m\u00e1y \u1ea3o b\u1eb1ng virutalbox</li> <li>Kubernetes cluster: 01 Master, 02 Worker, 01 NFS</li> <li>Phi\u00ean b\u1ea3n h\u1ec7 \u0111i\u1ec1u h\u00e0nh: Ubuntu Server 24.04</li> </ul> <p>L\u01b0u \u00fd tr\u00ean \u0111\u00e2y ch\u1ec9 l\u00e0 m\u00f4 h\u00ecnh th\u1eed nghi\u1ec7m, c\u00f2n m\u00f4i tr\u01b0\u1eddng production n\u00ean th\u1ef1c hi\u1ec7n \u00edt nh\u1ea5t: Kubernetes cluster: 03 Master, 08 Worker \u0111\u1ec3 \u0111\u1ea3m b\u1ea3o High Availability (HA) ho\u1eb7c nhi\u1ec1u h\u01a1n t\u00f9y thu\u1ed9c v\u00e0o \u0111\u1ed9 l\u1edbn c\u1ee7a d\u1ef1 \u00e1n</p> T\u00ean m\u00e1y/hostmane/Node H\u1ec7 \u0111i\u1ec1u h\u00e0nh IP Vai tr\u00f2 master.xtl ubuntu 24.04 192.168.1.100 master worker1.xtl ubuntu 24.04 192.168.1.101 worker 1 worker2.xtl ubuntu 24.04 192.168.1.102 worker 2 nfs.xtl ubuntu 24.04 192.168.1.110 NFS"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#tien-hanh-cai-at","title":"Ti\u1ebfn h\u00e0nh c\u00e0i \u0111\u1eb7t","text":""},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#cai-at-ip-cho-server-neu-chua-cau-hinh","title":"C\u00e0i \u0111\u1eb7t IP cho server n\u1ebfu ch\u01b0a c\u1ea5u h\u00ecnh","text":"<p>\u0110\u1ea7u ti\u00ean ki\u1ec3m tra IP hi\u1ec7n t\u1ea1i v\u00e0 c\u1ed5ng m\u1ea1ng c\u1ee7a m\u00e1y t\u00ednh b\u1eb1ng l\u1ec7nh <pre><code>ip addr show\n</code></pre></p> <p>\u0110\u1ed5i th\u00e0nh IP t\u0129nh</p> <p><pre><code>sudo nano /etc/netplan/00-installer-config.yaml\n</code></pre> Sau \u0111\u00f3, s\u1eeda n\u1ed9i dung file th\u00e0nh nh\u01b0 sau l\u01b0u l\u1ea1i (Ctrl + O) v\u00e0 tho\u00e1t ra (Ctrl + X)</p> <p></p> <p>Ti\u1ebfp theo ch\u1ea1y l\u1ec7nh netplan apply \u0111\u1ec3 \u00e1p d\u1ee5ng th\u00f4ng s\u1ed1 v\u1eeba m\u1edbi thay \u0111\u1ed5i</p> <p><pre><code>sudo netplan apply\n</code></pre> Tham kh\u1ea3o: D\u00f9ng virtualbox c\u00e0i c\u00e1c m\u00e1y \u1ea3o, d\u00f9ng Bridged Adapter \u0111\u1ec3 c\u00e0i ip t\u0129nh</p>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#cap-nhat-he-ieu-hanh-va-cap-nhat-hosts","title":"C\u1eadp nh\u1eadt h\u1ec7 \u0111i\u1ec1u h\u00e0nh v\u00e0 c\u1eadp nh\u1eadt hosts","text":"<p>Sau khi c\u00e0i \u0111\u1eb7t h\u1ec7 \u0111i\u1ec1u h\u00e0nh, c\u1ea7n c\u1eadp nh\u1eadt h\u1ec7 th\u1ed1ng: <pre><code>sudo apt update\nsudo apt upgrade -y\n</code></pre></p> <p>\u0110\u1eb7t hostname v\u00e0 c\u1eadp nh\u1eadt hosts file Master node <pre><code>sudo hostnamectl set-hostname \"master.xtl\"\n</code></pre></p> <p>Worker 1 <pre><code>sudo hostnamectl set-hostname \"worker1.xtl\"\n</code></pre> Worker 2 <pre><code>sudo hostnamectl set-hostname \"worker2.xtl\"\n</code></pre></p> <p>Ti\u1ebfp theo ch\u00fang ta c\u1eadp nh\u1eadt file /etc/hosts file c\u1ee7a t\u1ea5t c\u1ea3 c\u00e1c node.</p> <p>C\u00e0i nano editor n\u1ebfu server ch\u01b0a c\u00f3 <pre><code>sudo apt install -y nano \n</code></pre> M\u1edf ch\u1ec9nh s\u1eeda file etc/hosts <pre><code>sudo nano /etc/hosts\n</code></pre></p> <p>Sau \u0111\u00f3 th\u00eam v\u00e0o b\u00ean d\u01b0\u1edbi file n\u1ed9i dung d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>192.168.1.100   master.xtl\n192.168.1.101   worker1.xtl\n192.168.1.102   worker2.xtl\n192.168.1.110   nfs.xtl\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#disable-swap-va-cap-nhat-kernel","title":"Disable swap v\u00e0 c\u1eadp nh\u1eadt kernel","text":"<p>C\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y th\u1ef1c hi\u1ec7n tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node <pre><code>sudo swapoff -a\n</code></pre></p> <p>Ki\u1ec3m tra l\u1ea1i xem swap \u0111\u00e3 disabled hay ch\u01b0a b\u1eb1ng l\u1ec7nh free -h, n\u1ebfu th\u00e0nh c\u00f4ng k\u1ebft qu\u1ea3 s\u1ebd nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y:</p> <pre><code>$ free -h\n               total        used        free      shared  buff/cache   available\nMem:           7.7Gi       167Mi       7.1Gi       1.0Mi       437Mi   7.3Gi\nSwap:             0B          0B          0B\n</code></pre> <p>Ti\u1ebfp theo disable swap trong /etc/fstab <pre><code>sudo nano /etc/fstab\n</code></pre></p> <p>T\u00ecm d\u00f2ng: /swap.img none swap sw 0 0 v\u00e0 c\u1eadp nh\u1eadt l\u1ea1i th\u00e0nh: <pre><code>#/swap.img       none       swap       sw       0       0\n</code></pre></p> <p>Sau \u0111\u00f3 ch\u1ea1y ti\u1ebfp c\u00e1c l\u1ec7nh: <pre><code>sudo mount -a\n</code></pre></p> <pre><code>free -h\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#load-the-following-kernel-modules-on-all-the-nodes","title":"Load the following kernel modules on all the nodes:","text":"<pre><code>sudo tee /etc/modules-load.d/containerd.conf &lt;&lt;EOF\noverlay\nbr_netfilter\nEOF\n</code></pre> <pre><code>sudo modprobe overlay\nsudo modprobe br_netfilter\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#set-the-following-kernel-parameters-for-kubernetes","title":"Set the following Kernel parameters for Kubernetes.","text":"<pre><code>sudo tee /etc/sysctl.d/kubernetes.conf &lt;&lt;EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF\n</code></pre> <p>Sau \u0111\u00f3 reload l\u1ea1i sysctl</p> <pre><code>sudo sysctl --system\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#cai-at-containerd-run-time","title":"C\u00e0i \u0111\u1eb7t containerd run time","text":"<p>Ch\u1ea1y c\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node</p> <pre><code>sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates\nsudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\nsudo apt update\nsudo apt install -y containerd.io\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#them-cau-hinh-containerd","title":"Th\u00eam c\u1ea5u h\u00ecnh containerd.","text":"<pre><code>containerd config default | sudo tee /etc/containerd/config.toml &gt;/dev/null 2&gt;&amp;1\nsudo sed -i 's/SystemdCgroup \\= false/SystemdCgroup \\= true/g' /etc/containerd/config.toml\nsudo systemctl restart containerd\nsudo systemctl enable containerd\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#cai-at-kubernetes","title":"C\u00e0i \u0111\u1eb7t Kubernetes","text":"<p>Ch\u1ea1y c\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean t\u1ea5t c\u1ea3 c\u00e1c node</p> <p>Ki\u1ec3m tra h\u1ec7 \u0111i\u1ec1u h\u00e0nh</p> <pre><code>lsb_release -a\n</code></pre> <p>N\u1ebfu Codename: noble th\u00ec ch\u1ea1y (trong b\u00e0i vi\u1ebft n\u00e0y \u0111ang ch\u1ea1y theo c\u00e1ch n\u00e0y)</p> <pre><code>curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/k8s.gpg\necho 'deb [signed-by=/etc/apt/keyrings/k8s.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /' | sudo tee /etc/apt/sources.list.d/k8s.list\nsudo apt update\nsudo apt install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n</code></pre> <p>N\u1ebfu Codename: xenial th\u00ec ch\u1ea1y </p> <pre><code>curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -\nsudo apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"\nsudo apt update\nsudo apt install -y kubelet kubeadm kubectl\nsudo apt-mark hold kubelet kubeadm kubectl\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#khoi-tao-cluster-bang-kubeadm","title":"Kh\u1edfi t\u1ea1o cluster b\u1eb1ng kubeadm","text":"<p>Ch\u1ec9 ch\u1ea1y l\u00eanh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean master node <pre><code>sudo kubeadm init \\\n  --pod-network-cidr=10.10.0.0/16 \\\n  --control-plane-endpoint=master.xtl\n</code></pre></p> <p>Trong \u0111\u00f3 10.10.0.0/16 l\u00e0 CIDR c\u1ee7a pod network, b\u1ea1n c\u00f3 th\u1ec3 thay theo nhu c\u1ea7u.</p> <p>Ti\u1ebfp theo, th\u1ef1c thi c\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y tr\u00ean master node</p> <pre><code>mkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#chung-ta-thu-chay-lenh-e-kiem-tra-trang-thai-cua-cluster","title":"Ch\u00fang ta th\u1eed ch\u1ea1y l\u1ec7nh \u0111\u1ec3 ki\u1ebfm tra tr\u1ea1ng th\u00e1i c\u1ee7a cluster","text":"<pre><code>kubectl cluster-info\nkubectl get nodes\n</code></pre> <p>Ch\u00fang ta th\u1ea5y l\u00e0 control plane \u0111ang ch\u1ea1y v\u00e0 hi\u1ec7n t\u1ea1i ch\u1ec9 c\u00f3 m\u1ed7i master node, ch\u00fang ta s\u1ebd ti\u1ebfn h\u00e0nh th\u00eam worker node v\u00e0o cluster n\u00e0y.</p>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#them-worker-node-vao-cluster","title":"Th\u00eam worker node v\u00e0o cluster","text":"<p>L\u01b0u \u00fd: Ch\u1ea1y tr\u00ean master, l\u1ea5y m\u00e3 k\u1ebft n\u1ed1i worker v\u00e0o master <pre><code> kubeadm token create --print-join-command\n</code></pre></p> <p>Sau \u0111\u00f3, copy \u0111\u1ea7u ra v\u00e0o worker, v\u00ed d\u1ee5: L\u01b0u \u00fd: C\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y ch\u1ec9 ch\u1ea1y tr\u00ean c\u00e1c worker node</p> <p><pre><code>sudo kubeadm join master.xtl:6443 --token pow1z7.c4f9zyzy7i6u0cdt \\\n        --discovery-token-ca-cert-hash sha256:e31d7ac96745444bcc2f5b0313103a6e75803b994012ae7b217a579cde4f2ec1 \n</code></pre> Khi ch\u1ea1y kubectl get nodes \u0111\u1ec3 ki\u1ebfm tra c\u00e1c node (ch\u1ea1y tr\u00ean terminal c\u1ee7a master node), k\u1ebft qu\u1ea3 tr\u1ea3 v\u1ec1:</p> <p><pre><code>phuoctv@phuoctv:~$ kubectl get nodes\nNAME          STATUS     ROLES           AGE    VERSION\nmaster.xtl    NotReady   control-plane   7m5s   v1.30.5\nworker1.xtl   NotReady   &lt;none&gt;          21s    v1.30.5\nworker2.xtl   NotReady   &lt;none&gt;          6s     v1.30.5\n</code></pre> cho th\u1ea5y l\u00e0 c\u00e1c node \u0111\u00e3 \u0111\u01b0\u1ee3c th\u00eam th\u00e0nh c\u00f4ng v\u00e0o cluster.</p>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#cai-at-calico-pod-network-cho-kubernetes-cluster","title":"C\u00e0i \u0111\u1eb7t Calico Pod Network cho Kubernetes cluster","text":"<p>L\u01b0u \u00fd: C\u00e1c l\u1ec7nh d\u01b0\u1edbi \u0111\u00e2y ch\u1ec9 ch\u1ea1y tr\u00ean master node</p> <p>\u0110\u1ea7u ti\u00ean ch\u00fang ta t\u1ea3i v\u1ec1 file manifest d\u01b0\u1edbi d\u1ea1ng file yaml, \u0111\u00e2y l\u00e0 file c\u00e0i \u0111\u1eb7t Calico tr\u00ean Kubernetes cluster c\u00f3 s\u1ed1 node nh\u1ecf h\u01a1n 5</p> <pre><code>curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml -O\n</code></pre> <p>M\u1edf file v\u1eeba t\u1ea3i v\u1ec1 v\u00e0 t\u00ecm \u0111\u1ec3 ph\u1ea7n CALICO_IPV4POOL_CIDR Ch\u00fang ta s\u1eeda l\u1ea1i d\u1ea3i IP cho \u0111\u00fang v\u1edbi CIDR c\u1ee7a pod network trong l\u1ec7nh sudo kubeadm init. Trong v\u00ed d\u1ee5 c\u1ee7a m\u00ecnh l\u00e0 10.10.0.0/16 n\u00ean file sau khi s\u1eeda l\u1ea1i c\u00f3 d\u1ea1ng nh\u01b0 sau <pre><code>---\n# The default IPv4 pool to create on startup if none exists. Pod IPs will be\n# chosen from this range. Changing this value after installation will have\n# no effect. This should fall within `--cluster-cidr`.\n- name: CALICO_IPV4POOL_CIDR\n  value: '10.10.0.0/16'\n# Disable file logging so `kubectl logs` works.\n- name: CALICO_DISABLE_FILE_LOGGING\n  value: 'true'\n</code></pre></p> <p>Sau \u0111\u00f3 ch\u00fang ta c\u00e0i Calico l\u00ean Kubernetes cluster:</p> <pre><code>kubectl apply -f calico.yaml\n</code></pre> <p>Ch\u00fang ta s\u1ebd ki\u1ec3m tra xem calico \u0111\u00e3 \u0111\u01b0\u1ee3c deploy th\u00e0nh c\u00f4ng ch\u01b0a b\u1eb1ng c\u00e1ch ki\u1ec3m tra c\u00e1c pod tr\u00ean namespace kube-system</p> <pre><code>kubectl get pods -n kube-system\n\nNAME                                                 READY   STATUS    RESTARTS   AGE\ncalico-kube-controllers-57b57c56f-ptddp              1/1     Running   0          2m44s\ncalico-node-5fqml                                    1/1     Running   0          2m44s\ncalico-node-llfjq                                    1/1     Running   0          2m44s\ncalico-node-vw78h                                    1/1     Running   0          2m44s\ncoredns-787d4945fb-n7s9t                             1/1     Running   0          62m\ncoredns-787d4945fb-rs9mj\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#kiem-tra-trang-thai-cua-cac-node-sau-khi-cai-thanh-cong","title":"Ki\u1ec3m tra tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c node, sau khi c\u00e0i th\u00e0nh c\u00f4ng","text":"<p>N\u1ebfu status l\u00e0 Running c\u00f3 ngh\u0129a \u0111\u00e3 deploy th\u00e0nh c\u00f4ng, b\u00e2y gi\u1edd n\u1ebfu ki\u1ec3m tra tr\u1ea1ng th\u00e1i c\u1ee7a c\u00e1c node th\u00ec status s\u1ebd l\u00e0 Ready</p> <pre><code>phuoctv@phuoctv:~$ kubectl get nodes\nNAME          STATUS   ROLES           AGE   VERSION\nmaster.xtl    Ready    control-plane   26m   v1.30.5\nworker1.xtl   Ready    &lt;none&gt;          19m   v1.30.5\nworker2.xtl   Ready    &lt;none&gt;          19m   v1.30.5\n</code></pre>"},{"location":"blog/2025/04/01/c%C3%A0i-%C4%91%E1%BA%B7t-kubernetes-cluster-1-master-2-worker-tr%C3%AAn-ubuntu-2404/#tai-lieu-tham-khao","title":"T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>C\u00e0i \u0111\u1eb7t Kubernetes cluster tr\u00ean Ubuntu server 22.04</li> <li>Installing kubeadm</li> </ul>"},{"location":"project/movie/DangNhapVoiKeycloack/","title":"H\u01b0\u1edbng d\u1eabn \u0111\u0103ng nh\u1eadp SSO cho Angular v\u1edbi Keycloack","text":""},{"location":"project/movie/DangNhapVoiKeycloack/#1-cau-hinh-keycloak","title":"1. C\u1ea5u h\u00ecnh keycloak","text":"<p>V\u00ed d\u1ee5 t\u1ea1o client web-movie</p> <p>Trong m\u00f4i tr\u01b0\u1eddng test c\u1ea5u h\u00ecnh *, c\u00f2n m\u00f4i tr\u01b0\u1eddng production n\u00ean r\u00e0ng bu\u1ed9c \u0111\u00fang domain c\u1ee7a d\u1ef1 \u00e1n \u0111\u1ec3 b\u1ea3o m\u1eadt</p> <ul> <li>Client ID *: web-movie</li> <li>Valid redirect URIs: *</li> <li>Valid post logout redirect URIs: *</li> <li> <p>Web origins: *</p> </li> <li> <p>Client authentication: off</p> </li> <li> <p>Authorization: off</p> </li> <li> <p>Authentication flow:</p> </li> <li>Standard flow: check</li> <li>Direct access grants: check</li> <li>Implicit flow: check</li> </ul>"},{"location":"project/movie/DangNhapVoiKeycloack/#2-cau-hinh-angluar","title":"2. C\u1ea5u h\u00ecnh angluar","text":"<p>S\u1eed d\u1ee5ng th\u01b0 vi\u1ec7n keycloak-angular https://github.com/mauriciovigolo/keycloak-angular.git \u0111\u1ec3 \u0111\u0103ng nh\u1eadp SSO th\u00f4ng qua keycloack</p> <p>Th\u00eam c\u1ea5u h\u00ecnh m\u00f4i tr\u01b0\u1eddng</p> environment.ts<pre><code>export const environment = {\n  production: true,\n  apiUrl: 'http://localhost:9080',\n  keycloak: {\n    config: {\n      url: 'http://auth-production.reb.com', // URL of the Keycloak server  url: 'http://auth.reb.com:8080', // URL of the Keycloak server\n      realm: 'reb', // Realm to be used in Keycloak\n      clientId: 'web-movie' // Client ID for the application in Keycloak\n    }\n  }\n};\n</code></pre> <p>Th\u00eam c\u1ea5u h\u00ecnh kh\u1edfi t\u1ea1o keycloack</p> auth.config.ts<pre><code>// Function to initialize Keycloak with the necessary configurations\nimport {KeycloakBearerInterceptor, KeycloakService} from \"keycloak-angular\";\nimport {APP_INITIALIZER, Provider} from \"@angular/core\";\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {environment} from \"@environments/environment\";\n\nfunction initializeKeycloak(keycloak: KeycloakService) {\n  return () =&gt; {\n    if (!globalThis.window) {\n      return true;\n    }\n    return keycloak.init({\n      // Configuration details for Keycloak\n      config: {\n        url: environment.keycloak.config.url, // URL of the Keycloak server  url: 'http://auth.reb.com:8080', // URL of the Keycloak server\n        realm: environment.keycloak.config.realm, // Realm to be used in Keycloak\n        clientId:  environment.keycloak.config.clientId // Client ID for the application in Keycloak\n      },\n      // Options for Keycloak initialization\n      initOptions: {\n        onLoad: 'check-sso', // Action to take on load\n        silentCheckSsoRedirectUri:\n          window.location.origin + '/silent-check-sso.html' // URI for silent SSO checks\n      },\n      // Enables Bearer interceptor\n      enableBearerInterceptor: true,\n      // Prefix for the Bearer token\n      bearerPrefix: 'Bearer',\n      // URLs excluded from Bearer token addition (empty by default)\n      //bearerExcludedUrls: []\n    });\n  };\n}\n\n// Provider for Keycloak Bearer Interceptor\nexport const KeycloakBearerInterceptorProvider: Provider = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: KeycloakBearerInterceptor,\n  multi: true\n};\n\n// Provider for Keycloak Initialization\nexport const KeycloakInitializerProvider: Provider = {\n  provide: APP_INITIALIZER,\n  useFactory: initializeKeycloak,\n  multi: true,\n  deps: [KeycloakService]\n}\n</code></pre> <p>Th\u00eam provider c\u1ee7a keycloack</p> app.config.ts<pre><code>import {ApplicationConfig, provideZoneChangeDetection} from '@angular/core';\nimport {provideRouter} from '@angular/router';\n\nimport {routes} from './app.routes';\nimport {provideClientHydration} from '@angular/platform-browser';\nimport {provideAnimationsAsync} from '@angular/platform-browser/animations/async';\nimport {KeycloakService} from \"keycloak-angular\";\nimport {provideHttpClient, withFetch, withInterceptorsFromDi} from \"@angular/common/http\";\nimport {KeycloakBearerInterceptorProvider, KeycloakInitializerProvider} from \"@app/auth.config\";\n\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideHttpClient(withInterceptorsFromDi(), withFetch()), // Provides HttpClient with interceptors\n    KeycloakInitializerProvider, // Initializes Keycloak\n    KeycloakBearerInterceptorProvider, // Provides Keycloak Bearer Interceptor\n    KeycloakService, // Service for Keycloak\n\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes),\n    provideClientHydration(),\n    provideAnimationsAsync(),\n\n\n  ]\n};\n</code></pre> <p>Tham kh\u1ea3o: </p> <p>https://github.com/vanphuoc9/movie.git</p> <p>https://github.com/mauriciovigolo/keycloak-angular#readme</p>"},{"location":"project/movie/GioiThieu/","title":"Gi\u1edbi thi\u1ec7u d\u1ef1 \u00e1n Movie","text":""},{"location":"project/movie/GioiThieu/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>D\u1ef1 \u00e1n n\u00e0y \u0111\u01b0\u1ee3c t\u1ea1o ra \u0111\u1ec3 ph\u1ee5c v\u1ee5 h\u1ecdc t\u1eadp thi\u1ebft k\u00ea m\u1ed9t \u1ee9ng d\u1ee5ng c\u00f3 kh\u1ea3 n\u0103ng ch\u1ecbu t\u1ea3i l\u1edbn, t\u1ed1c \u0111\u1ed9 nhanh,.. v\u00e0 \u00e1p d\u1ee5ng micro service tr\u00ean k8s.</p> <p>M\u00ecnh xin gi\u1edbi thi\u1ec7u d\u1ef1 \u00e1n phim (Movie), d\u1ef1 \u00e1n n\u00e0y chia th\u00e0nh c\u00e1c ph\u1ea7n:</p> <ul> <li>Ph\u1ea7n giao di\u1ec7n web</li> <li>Ph\u1ea7n api c\u1ee7a h\u1ec7 th\u1ed1ng</li> <li>Ph\u1ea7n \u1ee9ng d\u1ee5ng mobile</li> </ul> <p>Trong d\u1ef1 \u00e1n n\u00e0y s\u1ebd s\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 c\u00f4ng ngh\u1ec7 nh\u01b0 sau:</p> <ul> <li>Backend: spring boot</li> <li>Database: mongodb, postgres</li> <li>Cache: redis</li> <li>Single-Sign On: Keycloack</li> <li>Frontend: angular</li> <li>Mobile: React native</li> </ul>"},{"location":"project/movie/GioiThieu/#2-phan-giao-dien-web","title":"2. Ph\u1ea7n giao di\u1ec7n web","text":"<p>Giao di\u1ec7n web m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng angular v\u00e0 \u00e1p d\u1ee5ng c\u00f4ng ngh\u1ec7 micro frontend</p>"},{"location":"project/movie/GioiThieu/#3-phan-api","title":"3. Ph\u1ea7n api","text":"<p>M\u00ecnh s\u1ebd s\u1eed d\u1ee5ng spring boot \u0111\u1ec3 vi\u1ebft api, \u00e1p d\u1ee5ng micro service v\u00e0 s\u1eed d\u1ee5ng cache cho h\u1ec7 th\u1ed1ng. S\u1eed d\u1ee5ng m\u1ed9t s\u1ed1 ph\u01b0\u01a1ng ph\u00e1p t\u1ed1i \u01b0u cho c\u01a1 s\u1edf d\u1eef li\u1ec7u.</p>"},{"location":"project/movie/GioiThieu/#4-phan-ung-dung-mobile","title":"4. Ph\u1ea7n \u1ee9ng d\u1ee5ng mobile","text":"<p>\u1ee8ng d\u1ee5ng mobile m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng react native</p>"},{"location":"project/movie/architecture/","title":"M\u00f4 h\u00ecnh ki\u1ebfn tr\u00fac d\u1ef1 \u00e1n","text":""},{"location":"project/movie/architecture/#1-mo-hinh-tong-the","title":"1. M\u00f4 h\u00ecnh t\u1ed5ng th\u1ec3","text":"<pre><code>                +---------------------------+\n                |    Ng\u01b0\u1eddi d\u00f9ng (Client)    |\n                +---------------------------+\n                        |\n            +-------------------------------+\n            |      Giao di\u1ec7n ng\u01b0\u1eddi d\u00f9ng     |\n            |  - Angular (Web Frontend)     |\n            |  - React Native (Mobile App)  |\n            +-------------------------------+\n                        |\n                G\u1ecdi API (HTTPS)\n                        |\n        +------------------------------------+\n        |       API Gateway / Ingress        | \u2190 Kubernetes ho\u1eb7c NGINX Ingress\n        +------------------------------------+\n                        |\n        +----------------+-------------------+\n        |                                    |\n+-------------------+              +--------------------------+\n|     Spring Boot   |              |     Keycloak (SSO)       |\n|  (RESTful API)    |\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba|   Authentication Server  |\n|                   |              +--------------------------+\n+--------+----------+\n        |\n+--------+--------+-----------------------+\n|                 |                       |\n|     PostgreSQL  |     MongoDB           |    Redis\n| (D\u1eef li\u1ec7u quan h\u1ec7)| (D\u1eef li\u1ec7u phi quan h\u1ec7)| (Cache, session/token)\n+-----------------+-----------------------+\n</code></pre>"},{"location":"project/movie/architecture/#2-cac-dich-vu-cua-he-thong","title":"2. C\u00e1c d\u1ecbch v\u1ee5 c\u1ee7a h\u1ec7 th\u1ed1ng","text":"<p>D\u01b0\u1edbi \u0111\u00e2y l\u00e0 c\u00e1c d\u1ecbch v\u1ee5 trong h\u1ec7 th\u1ed1ng:</p> T\u00ean D\u1ecbch v\u1ee5 M\u00f4 T\u1ea3 Ch\u1ee9c N\u0103ng \u0110\u01b0\u1eddng D\u1eabn GitHub AuthService X\u1eed l\u00fd x\u00e1c th\u1ef1c v\u00e0 \u1ee7y quy\u1ec1n ng\u01b0\u1eddi d\u00f9ng, qu\u1ea3n l\u00fd session, JWT. S\u1eed d\u1ee5ng keycloack. UserService Qu\u1ea3n l\u00fd th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng nh\u01b0 \u0111\u0103ng k\u00fd, \u0111\u0103ng nh\u1eadp, ch\u1ec9nh s\u1eeda h\u1ed3 s\u01a1. MovieService Cung c\u1ea5p th\u00f4ng tin phim nh\u01b0 t\u00ean, m\u00f4 t\u1ea3, th\u1ec3 lo\u1ea1i, trailer, v.v. https://github.com/vanphuoc9/movie.git FileService Cung c\u1ea5p d\u1ecbch v\u1ee5 download file, upload file, delete file... https://github.com/vanphuoc9/file.git ReviewService Qu\u1ea3n l\u00fd \u0111\u00e1nh gi\u00e1 v\u00e0 b\u00ecnh lu\u1eadn c\u1ee7a ng\u01b0\u1eddi d\u00f9ng v\u1ec1 c\u00e1c b\u1ed9 phim. RatingService Qu\u1ea3n l\u00fd h\u1ec7 th\u1ed1ng \u0111\u00e1nh gi\u00e1 (stars, like/dislike) c\u1ee7a c\u00e1c b\u1ed9 phim. PaymentService X\u1eed l\u00fd giao d\u1ecbch thanh to\u00e1n cho thu\u00ea ho\u1eb7c mua phim. NotificationService G\u1eedi th\u00f4ng b\u00e1o qua email, SMS ho\u1eb7c th\u00f4ng b\u00e1o \u0111\u1ea9y cho ng\u01b0\u1eddi d\u00f9ng."},{"location":"project/movie/file/","title":"Tri\u1ec3n khai service file l\u00ean k8s","text":""},{"location":"project/movie/file/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>B\u00e0i vi\u1ebft n\u00e0y gi\u1edbi thi\u1ec7u c\u00e1ch tri\u1ec3n khai th\u1eed nghi\u1ec7m api service file l\u00ean k8s.</p> <ul> <li>Source code: https://github.com/vanphuoc9/file.git </li> <li>Source file config: https://github.com/vanphuoc9/file-config.git</li> </ul> <p>B\u00e0i vi\u1ebft n\u00e0y gi\u1edbi thi\u1ec7u c\u00e1ch tri\u1ec3n khai m\u1ed9t service l\u00ean k8s b\u1eb1ng jenkins v\u00e0 helm.</p> <p>C\u00e1c b\u00e0i vi\u1ebft ti\u1ebfp theo m\u00ecnh s\u1ebd gi\u1edbi thi\u1ec7u c\u00e1ch setup c\u00e1c service v\u00e0 web app khi kh\u1edfi t\u1ea1o h\u1ec7 th\u1ed1ng ban \u0111\u1ea7u b\u1eb1ng 1 file helm duy nh\u1ea5t chong c\u00e1c service.</p>"},{"location":"project/movie/file/#2-cai-at","title":"2. C\u00e0i \u0111\u1eb7t","text":""},{"location":"project/movie/file/#21-dung-jenkins-build-dockerfile-va-sau-o-push-image-len-docker-hub","title":"2.1. D\u00f9ng jenkins build dockerfile v\u00e0 sau \u0111\u00f3 push image l\u00ean docker hub","text":"<p>Trong project file https://github.com/vanphuoc9/file.git c\u00f3 file:</p> <p>Dockerfile: d\u00f9ng \u0111\u1ec3 c\u1ea5u h\u00ecnh build source code th\u00e0nh file jar</p> Dockerfile<pre><code># Stage 1: Build the application using Gradle\nFROM gradle:8.7-jdk21 AS builder\n\n# Copy everything and build the app\nWORKDIR /home/gradle/project\nCOPY --chown=gradle:gradle . .\n\n# Build the app (using the bootJar task)\nRUN gradle bootJar --no-daemon\n\n# Stage 2: Run the application using a minimal JDK runtime\nFROM eclipse-temurin:21-jdk-jammy\n\nWORKDIR /app\n\n# Copy the fat JAR from the builder stage\nCOPY --from=builder /home/gradle/project/build/libs/*.jar app.jar\n\n# Expose the port (matching server.port=9081)\nEXPOSE 9081\n\n# Run the Spring Boot app\nENTRYPOINT [\"java\", \"-jar\", \"app.jar\"]\n</code></pre> <p>Jenkinsfile-k8s-full: d\u00f9ng jenkins \u0111\u1ec3 build Dockerfile \u1edf tr\u00ean th\u00e0nh image v\u00e0 \u0111\u1ea9y image \u0111\u00f3 l\u00ean dockerhub</p> Jenkinsfile-k8s-full<pre><code>def appConfigRepo = 'https://github.com/vanphuoc9/file-config.git'\ndef appConfigBranch = 'main'\n\ndef helmRepo = \"file-config\"\ndef helmValueFile = \"values.yaml\"\n\npipeline {\n    agent any\n\n    environment {\n        BUILD_NUMBER = \"${env.BUILD_NUMBER}\"\n        version = \"v1.${BUILD_NUMBER}\"\n        DOCKER_IMAGE_NAME = \"thaiphuoc1997/svcfile\"\n        DOCKER_IMAGE = \"${DOCKER_IMAGE_NAME}:${version}\"\n    }\n\n    options {\n        skipDefaultCheckout()\n    }\n\n    parameters {\n        string(name: 'GIT_URL', defaultValue: 'https://github.com/vanphuoc9/file.git', description: 'The URL of the source Git repository to use.')\n        string(name: 'GIT_BRANCH', defaultValue: 'master' , description: 'The branch in the source Git repository to use.')\n    }\n\n    stages {\n        stage(\"Checkout\") {\n            steps {\n                checkout(changelog: false, poll: false, scm: [\n                    $class: 'GitSCM',\n                    branches: [[name: params.GIT_BRANCH]],\n                    doGenerateSubmoduleConfigurations: false,\n                    submoduleCfg: [],\n                    userRemoteConfigs: [[url: params.GIT_URL]],\n                ])\n                stash name: 'sources', includes: '**', excludes: '**/.git,**/.git/**'\n            }\n        }\n\n        stage(\"Build And Push Docker Image\") {\n            agent {\n                label 'docker-build'\n            }\n            steps {\n                unstash 'sources'\n                container(name: 'kaniko') {\n                    sh '/kaniko/executor --context=`pwd` --dockerfile=`pwd`/Dockerfile --destination=${DOCKER_IMAGE}'\n                }\n            }\n        }\n\n        // stage('Update version in helm-chart') {\n        //     steps {\n        //         withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {\n        //             sh \"\"\"#!/bin/bash\n        //                 set -e\n\n        //                 [[ -d ${helmRepo} ]] &amp;&amp; rm -rf ${helmRepo}\n\n        //                 git clone ${appConfigRepo} --branch ${appConfigBranch}\n        //                 cd ${helmRepo}\n\n        //                 # C\u1eadp nh\u1eadt tag v\u1edbi version\n        //                 sed -i \"s|  tag: .*|  tag: \\\\\\\"${version}\\\\\\\"|\" ${helmValueFile}\n\n        //                 git config user.name \"vanphuoc9\"\n        //                 git config user.email \"thaiphuoc1997@gmail.com\"\n\n        //                 git add .\n        //                 git commit -m \"Update to version ${version}\" || echo \"No changes to commit\"\n        //                 git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/vanphuoc9/file-config.git\n\n        //                 cd ..\n        //                 rm -rf ${helmRepo}\n        //             \"\"\"\n        //         }\n        //     }\n        // }\n    }\n}\n</code></pre> <p>C\u00f3 th\u1ec3 th\u1ef1c hi\u1ec7n theo c\u00e1c b\u01b0\u1edbc \u1edf c\u00e1c b\u00e0i vi\u1ebft tr\u01b0\u1edbc: C\u1ea5u h\u00ecnh lu\u1ed3ng Jenkins Build Docker image v\u00e0 push l\u00ean Docker Hub</p>"},{"location":"project/movie/file/#22-tao-helm-va-trien-khai-len-k8s","title":"2.2. T\u1ea1o helm v\u00e0 tri\u1ec3n khai l\u00ean k8s","text":"<p>T\u1ea1o helm file-config</p> <p>application.properties<pre><code>helm create file-config\n</code></pre> Sau khi t\u1ea1o helm xong th\u00ec b\u00e0i to\u00e1n \u0111\u1eb7t ra l\u00e0m c\u00e1ch n\u00e0o c\u1ea5u h\u00ecnh c\u00e1c tham s\u1ed1 c\u1ee7a spring boot l\u00ean k8s, do c\u00f3 th\u1ec3 c\u1ea5u h\u00ecnh c\u00e1c m\u00f4i tr\u01b0\u1eddng kh\u00e1c nhau nh\u01b0 production, testing, dev th\u00ec c\u1ea5u h\u00ecnh l\u1ea1i kh\u00e1c nhau</p> <p>V\u00ed d\u1ee5 trong application.properties c\u1ee7a spring boot c\u00f3 c\u00e1c tham s\u1ed1 m\u00f4i tr\u01b0\u1eddng nh\u01b0 sau:</p> application.properties<pre><code>spring.application.name=file\n\nserver.port=9081\n\nminio.url=${MINIO_URL:http://192.168.1.100:30012}\nminio.bucket=${MINIO_BUCKET:movie}\nminio.accessKey=${MINIO_ACCESS_KEY:8ADlXpiyA33VRayeDqGn}\nminio.secretKey=${MINIO_SECRET_KEY:HnZTWCxRdLqGHonzvL1WYgQ5Oej2O2ShT29Hb2pv}\n\n\n#spring.security.oauth2.resourceserver.jwt.issuer-uri=${ISSUER_URI:http://auth-production.reb.com/realms/reb} # tam thoi tat de test deploy tren k8s\nspring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI:http://auth-production.reb.com/realms/reb/protocol/openid-connect/certs}\n\nspring.data.mongodb.uri=${MONGODB_URI:mongodb://rebdb:rebdb@192.168.1.100:30011/rebdb?retryWrites=true&amp;w=majority}\n\n#Servlet Multipart Properties\nspring.servlet.multipart.enabled=${MULTIPART_ENABLE:true}\nspring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:500MB}\nspring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:500MB}\nspring.servlet.multipart.file-size-threshold=${FILE_SIZE_THRESHOLD:2KB}\n\n\nspringdoc.swagger-ui.enabled=${STRING_DOC_SWAGGER_UI_ENABLE:true}\nspringdoc.api-docs.enabled=${STRING_DOC_API_DOCS_ENABLE:true}\nspringdoc.api-docs.path=${STRING_DOC_API_DOCS_PATH:/api-docs}\nspringdoc.swagger-ui.path=${STRING_DOC_SWAGGER_UI_PATH://swagger-ui.html}\n</code></pre> <p>Khi deploy l\u00ean k8s c\u1ea7n thay c\u00e1c tham s\u1ed1 c\u1ea5u h\u00ecnh th\u00ec ch\u00fang ta l\u00e0m nh\u01b0 sau:</p> <p>T\u1ea1o file configmap \u0111\u1ec3 c\u1ea5u h\u00ecnh c\u00e1c th\u00f4ng tin kh\u00f4ng nh\u1ea1y c\u1ea3m</p> configmap.yaml<pre><code>apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ include \"file-config.fullname\" . }}-config\n  labels:\n    {{- include \"file-config.labels\" . | nindent 4 }}\ndata:\n  SPRING_APPLICATION_NAME: {{ .Values.config.springApplicationName | quote }}\n  SERVER_PORT: {{ .Values.config.serverPort | quote }}\n  SPRING_SERVLET_MULTIPART_ENABLED: {{ .Values.config.multipartEnabled | quote }}\n  SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: {{ .Values.config.maxFileSize | quote }}\n  SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: {{ .Values.config.maxRequestSize | quote }}\n  SPRING_SERVLET_MULTIPART_FILE_SIZE_THRESHOLD: {{ .Values.config.fileSizeThreshold | quote }}\n  SPRINGDOC_SWAGGER_UI_ENABLED: {{ .Values.config.springdocSwaggerUiEnabled | quote }}\n  SPRINGDOC_API_DOCS_ENABLED: {{ .Values.config.springdocApiDocsEnabled | quote }}\n  SPRINGDOC_API_DOCS_PATH: {{ .Values.config.springdocApiDocsPath | quote }}\n  SPRINGDOC_SWAGGER_UI_PATH: {{ .Values.config.springdocSwaggerUiPath | quote }}\n</code></pre> <p>T\u1ea1o file secret \u0111\u1ec3 c\u1ea5u h\u00ecnh c\u00e1c th\u00f4ng tin nh\u1ea1y c\u1ea3m:</p> secret.yaml<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: {{ include \"file-config.fullname\" . }}-secret\n  labels:\n    {{- include \"file-config.labels\" . | nindent 4 }}\ntype: Opaque\ndata:\n  MINIO_URL: {{ .Values.secret.minioUrl | b64enc }}\n  MINIO_BUCKET: {{ .Values.secret.minioBucket | b64enc }}\n  MINIO_ACCESS_KEY: {{ .Values.secret.minioAccessKey | b64enc }}\n  MINIO_SECRET_KEY: {{ .Values.secret.minioSecretKey | b64enc }}\n  ISSUER_URI: {{ .Values.secret.issuerUri | b64enc }}\n  JWK_SET_URI: {{ .Values.secret.jwkSetUri | b64enc }}\n  MONGODB_URI: {{ .Values.secret.mongodbUri | b64enc }}\n</code></pre> <p>Trong file values.yaml c\u1ea5u h\u00ecnh c\u00e1c th\u00f4ng s\u1ed1 nh\u01b0 phi\u00ean b\u1ea3n image, c\u00e1c th\u00f4ng s\u1ed1 c\u1ea5u h\u00ecnh,...</p> values.yaml<pre><code># Default values for file-config.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/\nreplicaCount: 1\n\n# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/\nimage:\n  repository: thaiphuoc1997/svcfile\n  # This sets the pull policy for images.\n  pullPolicy: IfNotPresent\n  # Overrides the image tag whose default is the chart appVersion.\n  tag: \"v1.7\"\n\n# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: []\n# This is to override the chart name.\nnameOverride: \"\"\nfullnameOverride: \"\"\n\n#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Automatically mount a ServiceAccount's API credentials?\n  automount: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n# This is for setting Kubernetes Annotations to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ \npodAnnotations: {}\n# This is for setting Kubernetes Labels to a Pod.\n# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\npodLabels: {}\n\npodSecurityContext: {}\n  # fsGroup: 2000\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/\nservice:\n  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types\n  type: ClusterIP\n  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports\n  port: 9081\n\n# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/\ningress:\n  enabled: true\n  className: \"\"\n  annotations: \n    kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  hosts:\n    - host: filesvc.reb.com\n      paths:\n        - path: /\n          pathType: Prefix\n  tls: []\n  #  - secretName: chart-example-tls\n  #    hosts:\n  #      - chart-example.local\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 100m\n  #   memory: 128Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 128Mi\n\n# Non-sensitive configuration (ConfigMap)\nconfig:\n  springApplicationName: \"file\"\n  serverPort: 9081\n  multipartEnabled: true\n  maxFileSize: \"500MB\"\n  maxRequestSize: \"500MB\"\n  fileSizeThreshold: \"2KB\"\n  springdocSwaggerUiEnabled: true\n  springdocApiDocsEnabled: true\n  springdocApiDocsPath: \"/api-docs\"\n  springdocSwaggerUiPath: \"/swagger-ui.html\"\n\n# Sensitive configuration (Secret)\nsecret:\n  minioUrl: \"http://minio-service:9000\"\n  minioBucket: \"movie\"\n  minioAccessKey: \"8ADlXpiyA33VRayeDqGn\"\n  minioSecretKey: \"HnZTWCxRdLqGHonzvL1WYgQ5Oej2O2ShT29Hb2pv\"\n  issuerUri: \"http://keycloak-service:8080/realms/reb\"\n  jwkSetUri: \"http://keycloak-service:8080/realms/reb/protocol/openid-connect/certs\"\n  mongodbUri: \"mongodb://rebdb:rebdb@mongo-service:27017/rebdb?retryWrites=true&amp;w=majority\"\n\n# Environment variables\nenv:\n  SPRING_PROFILES_ACTIVE: prod\n\n# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nlivenessProbe:\n  httpGet:\n    path: /actuator/health\n    port: 9081\nreadinessProbe:\n  httpGet:\n    path: /actuator/health\n    port: 9081\n\n#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/\nautoscaling:\n  enabled: false\n  minReplicas: 1\n  maxReplicas: 100\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n\n# Additional volumes on the output Deployment definition.\nvolumes: []\n# - name: foo\n#   secret:\n#     secretName: mysecret\n#     optional: false\n\n# Additional volumeMounts on the output Deployment definition.\nvolumeMounts: []\n# - name: foo\n#   mountPath: \"/etc/foo\"\n#   readOnly: true\n\nnodeSelector: {}\n\ntolerations: []\n\naffinity: {}\n</code></pre> <p>L\u01b0u \u00fd</p> <p>jwkSetUri: \"http://keycloak-service:8080/realms/reb/protocol/openid-connect/certs\" =&gt; do domain http://auth-production.reb.com ch\u01b0a public n\u00ean m\u00ecnh d\u00f9ng http://keycloak-service:8080 \u0111\u1ec3 ki\u1ec3m tra auth api, ch\u1ed7 n\u00e0y domain public r\u1ed3i th\u00ec n\u00ean d\u00f9ng domain http://auth-production.reb.com</p> <p>V\u00e0o th\u01b0 m\u1ee5c ch\u1ee9a helm c\u1ee7a service file trong server, ch\u1ea1y l\u1ec7nh sau:</p> <pre><code>helm upgrade --install svcfile . --namespace dev --set image.tag=v1.7\n</code></pre> <p>L\u01b0u \u00fd</p> <p>C\u00f3 th\u1ec3 \u0111\u1ed5i c\u1ea5u h\u00ecnh kh\u00e1c trong helm \u0111\u1ec3 ph\u00f9 h\u1ee3p v\u1edbi m\u00f4i tr\u01b0\u1eddng m\u00ecnh c\u00e0i \u0111\u1eb7t</p> <p>Mu\u1ed1n x\u00f3a helm v\u1eeba t\u1ea1o th\u00ec</p> <pre><code>helm uninstall svcfile -n dev\n</code></pre>"},{"location":"project/movie/file/#23-trien-khai-toan-trinh-voi-jenkins","title":"2.3. Tri\u1ec3n khai to\u00e0n tr\u00ecnh v\u1edbi jenkins","text":"<p>Sau khi ch\u1ea1y helm \u1ed5n r\u1ed3i th\u00ec ti\u1ebfn h\u00e0nh b\u1ecf comment \"Update version in helm-chart\", v\u00e0 c\u1ea5u h\u00ecnh Argocd \u0111\u1ec3 tri\u1ec3n khai t\u1ef1 \u0111\u1ed9ng l\u00ean K8S</p> Jenkinsfile-k8s-full<pre><code>def appConfigRepo = 'https://github.com/vanphuoc9/file-config.git'\ndef appConfigBranch = 'main'\n\ndef helmRepo = \"file-config\"\ndef helmValueFile = \"values.yaml\"\n\npipeline {\n    agent any\n\n    environment {\n        BUILD_NUMBER = \"${env.BUILD_NUMBER}\"\n        version = \"v1.${BUILD_NUMBER}\"\n        DOCKER_IMAGE_NAME = \"thaiphuoc1997/svcfile\"\n        DOCKER_IMAGE = \"${DOCKER_IMAGE_NAME}:${version}\"\n    }\n\n    options {\n        skipDefaultCheckout()\n    }\n\n    parameters {\n        string(name: 'GIT_URL', defaultValue: 'https://github.com/vanphuoc9/file.git', description: 'The URL of the source Git repository to use.')\n        string(name: 'GIT_BRANCH', defaultValue: 'master' , description: 'The branch in the source Git repository to use.')\n    }\n\n    stages {\n        stage(\"Checkout\") {\n            steps {\n                checkout(changelog: false, poll: false, scm: [\n                    $class: 'GitSCM',\n                    branches: [[name: params.GIT_BRANCH]],\n                    doGenerateSubmoduleConfigurations: false,\n                    submoduleCfg: [],\n                    userRemoteConfigs: [[url: params.GIT_URL]],\n                ])\n                stash name: 'sources', includes: '**', excludes: '**/.git,**/.git/**'\n            }\n        }\n\n        stage(\"Build And Push Docker Image\") {\n            agent {\n                label 'docker-build'\n            }\n            steps {\n                unstash 'sources'\n                container(name: 'kaniko') {\n                    sh '/kaniko/executor --context=`pwd` --dockerfile=`pwd`/Dockerfile --destination=${DOCKER_IMAGE}'\n                }\n            }\n        }\n\n        stage('Update version in helm-chart') {\n            steps {\n                withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {\n                    sh \"\"\"#!/bin/bash\n                        set -e\n\n                        [[ -d ${helmRepo} ]] &amp;&amp; rm -rf ${helmRepo}\n\n                        git clone ${appConfigRepo} --branch ${appConfigBranch}\n                        cd ${helmRepo}\n\n                        # C\u1eadp nh\u1eadt tag v\u1edbi version\n                        sed -i \"s|  tag: .*|  tag: \\\\\\\"${version}\\\\\\\"|\" ${helmValueFile}\n\n                        git config user.name \"vanphuoc9\"\n                        git config user.email \"thaiphuoc1997@gmail.com\"\n\n                        git add .\n                        git commit -m \"Update to version ${version}\" || echo \"No changes to commit\"\n                        git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/vanphuoc9/file-config.git\n\n                        cd ..\n                        rm -rf ${helmRepo}\n                    \"\"\"\n                }\n            }\n        }\n    }\n}\n</code></pre> <p>Sau \u0111\u00f3 c\u1ea5u h\u00ecnh theo b\u00e0i vi\u1ebft: To\u00e0n lu\u1ed3ng Jenkins + Argocd + Github + Docker hub tr\u00ean k8s</p>"},{"location":"project/movie/keycloack/","title":"C\u00e0i \u0111\u1eb7t keycloack tr\u00ean k8s","text":""},{"location":"project/movie/keycloack/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>\u0110\u0103ng nh\u1eadp m\u1ed9t l\u1ea7n (Single-Sign On) Ng\u01b0\u1eddi d\u00f9ng s\u1ebd x\u00e1c th\u1ef1c th\u00f4ng qua Keycloak thay v\u00ec t\u1eebng \u1ee9ng d\u1ee5ng ri\u00eang l\u1ebb. \u0110i\u1ec1u n\u00e0y c\u00f3 ngh\u0129a l\u00e0 c\u00e1c \u1ee9ng d\u1ee5ng c\u1ee7a b\u1ea1n kh\u00f4ng c\u1ea7n ph\u1ea3i x\u1eed l\u00fd bi\u1ec3u m\u1eabu \u0111\u0103ng nh\u1eadp, x\u00e1c th\u1ef1c ng\u01b0\u1eddi d\u00f9ng hay l\u01b0u tr\u1eef th\u00f4ng tin ng\u01b0\u1eddi d\u00f9ng. Sau khi \u0111\u00e3 \u0111\u0103ng nh\u1eadp v\u00e0o Keycloak, ng\u01b0\u1eddi d\u00f9ng kh\u00f4ng c\u1ea7n ph\u1ea3i \u0111\u0103ng nh\u1eadp l\u1ea1i khi truy c\u1eadp c\u00e1c \u1ee9ng d\u1ee5ng kh\u00e1c.</p> <p>\u0110i\u1ec1u n\u00e0y c\u0169ng \u00e1p d\u1ee5ng cho vi\u1ec7c \u0111\u0103ng xu\u1ea5t. Keycloak h\u1ed7 tr\u1ee3 \u0111\u0103ng xu\u1ea5t m\u1ed9t l\u1ea7n (single-sign out), ngh\u0129a l\u00e0 ng\u01b0\u1eddi d\u00f9ng ch\u1ec9 c\u1ea7n \u0111\u0103ng xu\u1ea5t m\u1ed9t l\u1ea7n \u0111\u1ec3 \u0111\u01b0\u1ee3c \u0111\u0103ng xu\u1ea5t kh\u1ecfi t\u1ea5t c\u1ea3 c\u00e1c \u1ee9ng d\u1ee5ng s\u1eed d\u1ee5ng Keycloak.</p>"},{"location":"project/movie/keycloack/#2-cai-at-theo-cach-thu-cong","title":"2. C\u00e0i \u0111\u1eb7t theo c\u00e1ch th\u1ee7 c\u00f4ng","text":"<p>Github ch\u1ee9a file c\u00e0i \u0111\u1eb7t: https://github.com/vanphuoc9/install-keycloack-k8s.git</p>"},{"location":"project/movie/keycloack/#21-cai-at-database-cho-keycloack","title":"2.1. C\u00e0i \u0111\u1eb7t database cho keycloack","text":"<p>Trong d\u1ef1 \u00e1n \u00e1n n\u00e0y m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng postgres cho keycloack \u0111\u1ec3 vi\u1ec7c c\u00e0i \u0111\u1eb7t d\u1ec5 d\u00e0ng h\u01a1n, n\u1ebfu s\u1eed d\u1ee5ng production anh em c\u00f3 th\u1ec3 c\u00e2n nh\u1eafc s\u1eed d\u1ee5ng oracle database l\u00e0m database cho keycloack.</p> <p>T\u1ea1o namespace dev n\u1ebfu ch\u01b0a t\u1ea1o</p> <pre><code>kubectl create namespace dev\n</code></pre>"},{"location":"project/movie/keycloack/#211-tao-pv-va-pvc-chua-db-postgres","title":"2.1.1. T\u1ea1o PV v\u00e0 PVC ch\u1ee9a DB postgres","text":"postgres-keycloack-pv.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: postgres-keycloack-pv-volume\n  namespace: dev\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 20Gi\n  accessModes:\n    - ReadWriteOnce\n  nfs:\n    path: /mnt/nfs_share/keycloack\n    server: 192.168.1.110  # Thay b\u1eb1ng IP NFS Server\n    readOnly: false\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgres-keycloack-pv-claim\n  namespace: dev\nspec:\n  storageClassName: manual\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 20Gi\n\n---\n</code></pre>"},{"location":"project/movie/keycloack/#212-tao-secret-cho-postgres","title":"2.1.2. T\u1ea1o secret cho postgres","text":"postgres-secret.yaml<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: postgres-secret\n  namespace: dev\ntype: Opaque\ndata:\n  postgres-root-username: cmViTW92aWU=\n  postgres-root-password: cmViTW92aWVAMTIz\n</code></pre>"},{"location":"project/movie/keycloack/#212-cai-at-deployment-va-service-cho-postgres","title":"2.1.2. C\u00e0i \u0111\u1eb7t Deployment v\u00e0 Service cho postgres","text":"postgres-keycloack-dp.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres-keycloack\n  namespace: dev\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres-keycloack\n  template:\n    metadata:\n      labels:\n        app: postgres-keycloack\n    spec:\n      containers:\n      - name: postgres-keycloack\n        image: postgres:16.3\n        ports:\n        - containerPort: 5432\n        env:\n        - name: POSTGRES_USER\n          valueFrom: \n            secretKeyRef:\n              name: postgres-secret\n              key: postgres-root-username\n        - name: POSTGRES_PASSWORD\n          valueFrom: \n            secretKeyRef:\n              name: postgres-secret\n              key: postgres-root-password\n        - name: POSTGRES_DB\n          value: keycloackdb\n        volumeMounts:\n        - name: postgres-keycloack-persistent-storage\n          mountPath: /var/lib/postgresql/data\n      volumes:\n      - name: postgres-keycloack-persistent-storage\n        persistentVolumeClaim:\n          claimName: postgres-keycloack-pv-claim\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres-keycloack-service\n  namespace: dev\nspec:\n  selector:\n    app: postgres-keycloack\n  ports:\n    - protocol: TCP\n      port: 5432\n      targetPort: 5432\n</code></pre>"},{"location":"project/movie/keycloack/#22-cai-at-deployment-va-service-cho-keycloack","title":"2.2. C\u00e0i \u0111\u1eb7t Deployment v\u00e0 Service cho keycloack","text":"keycloak.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: keycloak\n  namespace: dev\n  labels:\n    app: keycloak\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: keycloak\n  template:\n    metadata:\n      labels:\n        app: keycloak\n    spec:\n      containers:\n        - name: keycloak\n          image: quay.io/keycloak/keycloak:26.2.0\n          args: [\"start-dev\"]\n          env:\n            - name: KEYCLOAK_ADMIN\n              value: admin\n            - name: KEYCLOAK_ADMIN_PASSWORD\n              value: admin\n            - name: KC_DB\n              value: postgres\n            - name: KC_DB_URL\n              value: jdbc:postgresql://postgres-keycloack-service:5432/keycloackdb\n            - name: KC_DB_USERNAME\n              valueFrom: \n                secretKeyRef:\n                  name: postgres-secret\n                  key: postgres-root-username\n            - name: KC_DB_PASSWORD\n              valueFrom: \n                secretKeyRef:\n                  name: postgres-secret\n                  key: postgres-root-password\n          ports:\n            - name: http\n              containerPort: 8080\n          readinessProbe:\n            httpGet:\n              path: /realms/master\n              port: 8080\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: keycloak-service\n  labels:\n    app: keycloak\n    namespace: dev\nspec:\n  selector:\n    app: keycloak\n  ports:\n    - name: http\n      port: 8080\n      targetPort: 8080\n</code></pre>"},{"location":"project/movie/keycloack/#23-tao-ingress-cho-keycloack","title":"2.3. T\u1ea1o ingress cho keycloack","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress-reb-dev\n  namespace: dev\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: \"500m\"\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: auth-production.reb.com\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/\"\n        backend:\n          service:\n            name: keycloak-service\n            port:\n              number: 8080\n</code></pre>"},{"location":"project/movie/keycloack/#24-cau-hinh-domain-cho-auth-productionrebcom","title":"2.4. C\u1ea5u h\u00ecnh domain cho auth-production.reb.com","text":"<pre><code>192.168.1.50 auth-production.reb.com \n</code></pre> <p>L\u01b0u \u00fd</p> <p>L\u01b0u \u00fd, 192.168.1.50 l\u00e0 External IP c\u1ee7a ingress c\u1ee7a b\u00e0i vi\u1ebft tr\u01b0\u1edbc</p>"},{"location":"project/movie/keycloack/#25-ang-nhap","title":"2.5. \u0110\u0103ng nh\u1eadp","text":"<p>Sau khi ch\u1ea1y c\u00e1c file tr\u00ean k8s th\u00ec khi truy c\u1eadp http://auth-production.reb.com th\u00ec s\u1ebd th\u1ea5y giao di\u1ec7n nh\u01b0 sau:</p> <p></p> <ul> <li>T\u00e0i kho\u1ea3n: admin</li> <li>M\u1eadt kh\u1ea9u: admin</li> </ul> <p></p>"},{"location":"project/movie/minio/","title":"C\u00e0i \u0111\u1eb7t Minio tr\u00ean k8s","text":""},{"location":"project/movie/minio/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>MinIO l\u00e0 m\u1ed9t gi\u1ea3i ph\u00e1p l\u01b0u tr\u1eef \u0111\u1ed1i t\u01b0\u1ee3ng (object storage) hi\u1ec7u su\u1ea5t cao, t\u01b0\u01a1ng th\u00edch ho\u00e0n to\u00e0n v\u1edbi giao th\u1ee9c Amazon S3, r\u1ea5t th\u00edch h\u1ee3p \u0111\u1ec3 tri\u1ec3n khai trong nhi\u1ec1u m\u00f4i tr\u01b0\u1eddng kh\u00e1c nhau \u2014 t\u1eeb \u0111\u00e1m m\u00e2y c\u00f4ng c\u1ed9ng, n\u1ed9i b\u1ed9, h\u1ec7 th\u1ed1ng bare-metal \u0111\u1ebfn c\u1ea3 m\u00f4i tr\u01b0\u1eddng edge.</p> <p>M\u1ed9t s\u1ed1 \u0111i\u1ec3m n\u1ed5i b\u1eadt c\u1ee7a MinIO:</p> <p>\u2705 T\u01b0\u01a1ng th\u00edch v\u1edbi S3: B\u1ea1n c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng c\u00e1c c\u00f4ng c\u1ee5, SDK, v\u00e0 d\u1ecbch v\u1ee5 thi\u1ebft k\u1ebf cho S3 v\u1edbi MinIO m\u00e0 kh\u00f4ng c\u1ea7n thay \u0111\u1ed5i g\u00ec nhi\u1ec1u.</p> <p>\u2699\ufe0f Tri\u1ec3n khai linh ho\u1ea1t: MinIO c\u00f3 th\u1ec3 ch\u1ea1y \u0111\u1ed9c l\u1eadp (standalone), ph\u00e2n t\u00e1n (distributed) ho\u1eb7c t\u00edch h\u1ee3p trong c\u00e1c c\u1ee5m Kubernetes.</p> <p>\ud83d\ude80 Hi\u1ec7u su\u1ea5t cao: T\u1ed1i \u01b0u cho c\u00e1c workload y\u00eau c\u1ea7u t\u1ed1c \u0111\u1ed9 cao nh\u01b0 AI/ML, ph\u00e2n t\u00edch d\u1eef li\u1ec7u l\u1edbn, CI/CD.</p> <p>\ud83d\udd10 B\u1ea3o m\u1eadt: H\u1ed7 tr\u1ee3 TLS, x\u00e1c th\u1ef1c, quy\u1ec1n truy c\u1eadp theo bucket/policy.</p> <p>\ud83d\udce6 T\u1ed1i gi\u1ea3n v\u00e0 d\u1ec5 tri\u1ec3n khai: M\u1ed9t binary duy nh\u1ea5t, d\u1ec5 c\u1ea5u h\u00ecnh.</p>"},{"location":"project/movie/minio/#2-cai-at","title":"2. C\u00e0i \u0111\u1eb7t","text":"<p>Github: https://github.com/vanphuoc9/install-minio-k8s.git</p>"},{"location":"project/movie/minio/#21-tao-pv-va-pvc","title":"2.1. T\u1ea1o PV v\u00e0 PVC","text":"minio-pv.yaml<pre><code>kind: PersistentVolume\napiVersion: v1\nmetadata:\n  name: minio-pv-volume\n  namespace: dev\nspec:\n  storageClassName: miniostorageclass\n  capacity:\n    storage: 5Gi \n  accessModes:\n    - ReadWriteOnce\n  nfs:\n    server: \"192.168.1.110\"\n    path: \"/mnt/nfs_share/minio-data/\"\n\n---\n\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: minio-pv-claim\n  namespace: dev\nspec:\n  storageClassName: miniostorageclass\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 5Gi\n</code></pre>"},{"location":"project/movie/minio/#22-cai-at-deployment-va-service","title":"2.2. C\u00e0i \u0111\u1eb7t Deployment v\u00e0 Service","text":"minio-pv.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: minio\n  namespace: dev\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: minio\n  template:\n    metadata:\n      labels:\n        app: minio\n    spec:\n      containers:\n      - name: minio\n        image: minio/minio:RELEASE.2024-08-17T01-24-54Z.fips\n        args:\n        - server\n        - /data\n        - \"--console-address=:9090\"  # C\u1ea5u h\u00ecnh port cho WebUI\n        env:\n        - name: MINIO_ROOT_USER\n          value: \"minioadmin\"\n        - name: MINIO_ROOT_PASSWORD\n          value: \"minioadmin\"\n        ports:\n        - containerPort: 9000\n        - containerPort: 9090  # Port cho WebUI\n        volumeMounts:\n        - name: minio-storage\n          mountPath: /data\n      volumes:\n      - name: minio-storage\n        persistentVolumeClaim:\n          claimName: minio-pv-claim\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio-service\n  namespace: dev\nspec:\n  type: NodePort\n  selector:\n    app: minio\n  ports:\n    - protocol: TCP\n      port: 9000\n      targetPort: 9000\n      nodePort: 30012\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: minio-webui-service\n  namespace: dev\nspec:\n  type: ClusterIP\n  selector:\n    app: minio\n  ports:\n    - protocol: TCP\n      port: 9090\n      targetPort: 9090\n     # nodePort: 30012\n</code></pre>"},{"location":"project/movie/minio/#23-tao-ingress-cho-keycloack","title":"2.3. T\u1ea1o ingress cho keycloack","text":"ingress.yaml<pre><code>apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ingress-minio\n  namespace: dev\n  annotations:\n    nginx.ingress.kubernetes.io/proxy-body-size: \"500m\"\n    nginx.ingress.kubernetes.io/rewrite-target: /\n    nginx.ingress.kubernetes.io/proxy-http-version: \"1.1\"\n    nginx.ingress.kubernetes.io/proxy-read-timeout: \"3600\"\n    nginx.ingress.kubernetes.io/proxy-send-timeout: \"3600\"\n    nginx.ingress.kubernetes.io/use-regex: \"true\"\n    nginx.ingress.kubernetes.io/enable-websocket: \"true\"\n    # nginx.ingress.kubernetes.io/configuration-snippet: |\n    #   proxy_set_header Upgrade $http_upgrade;\n    #   proxy_set_header Connection \"Upgrade\";\n    nginx.org/websocket-services: \"minio-webui-service\"\n\nspec:\n  ingressClassName: nginx\n  rules:\n  - host: minio.reb.com\n    http:\n      paths:\n      - pathType: Prefix\n        path: \"/\"\n        backend:\n          service:\n            name: minio-webui-service\n            port:\n              number: 9090\n</code></pre>"},{"location":"project/movie/minio/#24-cau-hinh-domain-cho-auth-productionrebcom","title":"2.4. C\u1ea5u h\u00ecnh domain cho auth-production.reb.com","text":"<pre><code>192.168.1.50 minio.reb.com\n</code></pre>"},{"location":"project/movie/minio/#3-cau-hinh","title":"3. C\u1ea5u h\u00ecnh","text":"<p>V\u00e0o \u0111\u01b0\u1eddng d\u1eabn minio.reb.com, \u0111\u0103ng nh\u1eadp v\u1edbi  - T\u00e0i kho\u1ea3n: minioadmin  - M\u1eadt kh\u1ea9u: minioadmin</p> <p></p> <p>T\u1ea1o Access Keys d\u00f9ng \u0111\u1ec3 service g\u1ecdi v\u00e0o minio</p> <p></p> <p>T\u1ea1o Buckets</p> <p></p>"},{"location":"project/movie/mongodb/","title":"C\u00e0i \u0111\u1eb7t Mongodb tr\u00ean k8s","text":""},{"location":"project/movie/mongodb/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>MongoDB l\u00e0 m\u1ed9t NoSQL database, kh\u00e1c v\u1edbi c\u01a1 s\u1edf d\u1eef li\u1ec7u quan h\u1ec7 (SQL nh\u01b0 MySQL, PostgreSQL).</p> <p>D\u1eef li\u1ec7u trong MongoDB \u0111\u01b0\u1ee3c l\u01b0u d\u01b0\u1edbi d\u1ea1ng document c\u00f3 c\u1ea5u tr\u00fac gi\u1ed1ng JSON, nh\u01b0ng th\u1ef1c t\u1ebf l\u00e0 BSON (Binary JSON), gi\u00fap m\u1edf r\u1ed9ng hi\u1ec7u su\u1ea5t v\u00e0 h\u1ed7 tr\u1ee3 nhi\u1ec1u ki\u1ec3u d\u1eef li\u1ec7u h\u01a1n.</p> <p>MongoDB \u0111\u01b0\u1ee3c thi\u1ebft k\u1ebf \u0111\u1ec3 m\u1edf r\u1ed9ng theo chi\u1ec1u ngang (horizontal scalability), ph\u00f9 h\u1ee3p v\u1edbi c\u00e1c \u1ee9ng d\u1ee5ng c\u00f3 d\u1eef li\u1ec7u l\u1edbn v\u00e0 thay \u0111\u1ed5i nhanh.</p>"},{"location":"project/movie/mongodb/#2-cai-at-tren-k8s","title":"2. C\u00e0i \u0111\u1eb7t tr\u00ean k8s","text":"<p>Github ch\u1ee9a file c\u00e0i \u0111\u1eb7t: https://github.com/vanphuoc9/install-mongodb.git</p>"},{"location":"project/movie/mongodb/#21-tao-secret","title":"2.1. T\u1ea1o secret","text":"mongo-secret.yaml<pre><code>apiVersion: v1\nkind: Secret\nmetadata:\n  name: mongo-secret\n  namespace: dev\ntype: Opaque\ndata:\n  mongo-root-username: dXNlcm5hbWU=\n  mongo-root-password: cGFzc3dvcmQ=\n</code></pre>"},{"location":"project/movie/mongodb/#22-tao-pv-va-pvc","title":"2.2. T\u1ea1o PV v\u00e0 PVC","text":"mongodb-pv.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: mongodb-pv-volume\n  namespace: dev\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 20Gi\n  accessModes:\n    - ReadWriteOnce\n  nfs:\n    path: /mnt/nfs_share/mongodb\n    server: 192.168.1.110  # Thay b\u1eb1ng IP NFS Server\n    readOnly: false\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: mongodb-pv-claim\n  namespace: dev\nspec:\n  storageClassName: manual\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 20Gi\n</code></pre>"},{"location":"project/movie/mongodb/#23-cai-at-deployment-va-service","title":"2.3. C\u00e0i \u0111\u1eb7t Deployment v\u00e0 Service","text":"mongodb-dp.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: mongodb-deployment\n  namespace: dev\n  labels:\n    app: mongodb\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: mongodb\n  template:\n    metadata:\n      labels:\n        app: mongodb\n    spec:\n      containers:\n      - name: mongodb\n        image: mongo\n        ports:\n        - containerPort: 27017\n        env:\n        - name: MONGO_INITDB_ROOT_USERNAME\n          valueFrom: \n            secretKeyRef:\n              name: mongo-secret\n              key: mongo-root-username\n        - name: MONGO_INITDB_ROOT_PASSWORD\n          valueFrom: \n            secretKeyRef:\n              name: mongo-secret\n              key: mongo-root-password\n        volumeMounts:\n        - name: mongodb-storage\n          mountPath: /data/db \n      volumes:\n        - name: mongodb-storage\n          persistentVolumeClaim:\n            claimName: mongodb-pv-claim\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: mongo-service\n  namespace: dev\nspec:\n  type: NodePort\n  selector:\n    app: mongodb\n  ports:\n    - protocol: TCP\n      port: 27017 # port service\n      targetPort: 27017 # container port\n      nodePort: 30011\n</code></pre>"},{"location":"project/movie/mongodb/#24-tao-database-bang-lenh","title":"2.4. T\u1ea1o Database b\u1eb1ng l\u1ec7nh","text":"<p>C\u00e0i d\u1eb7t shell  https://www.mongodb.com/try/download/shell</p> <p>Sau \u0111\u00f3 d\u0103ng nh\u1eadp v\u1edbi t\u00e0i kho\u1ea3n admin</p> <pre><code>mongosh --host 192.168.1.100 --port 30011 -u username -p password \n</code></pre> <p>S\u1eed d\u1ee5ng db rebdb:</p> <pre><code>use rebdb;\n</code></pre> <p>G\u00e1n roles</p> <pre><code>db.createUser({\n  user: \"rebdb\",\n  pwd: \"rebdb\",\n  roles: [{ role: \"readWrite\", db: \"rebdb\" }]\n});\n</code></pre> <p></p> <p>D\u00f9ng NoSQL for MongoDB \u0111\u1ec3 ki\u1ec3m tra </p> <p>\u0110\u01b0\u1eddng d\u1eabn k\u1ebft n\u1ed1i: mongodb://rebdb:rebdb@192.168.1.101:30011/rebdb</p> <p></p> <p></p>"},{"location":"project/movie/mongodb/#3-tham-khao","title":"3. Tham kh\u1ea3o:","text":"<p>https://www.strongdm.com/blog/mongodb-create-user</p>"},{"location":"project/movie/redis/","title":"C\u00e0i \u0111\u1eb7t Redis tr\u00ean k8s","text":""},{"location":"project/movie/redis/#1-gioi-thieu","title":"1. Gi\u1edbi thi\u1ec7u","text":"<p>Redis (Remote Dictionary Server) l\u00e0 m\u1ed9t kho l\u01b0u tr\u1eef d\u1eef li\u1ec7u m\u00e3 ngu\u1ed3n m\u1edf ho\u1ea1t \u0111\u1ed9ng ho\u00e0n to\u00e0n trong b\u1ed9 nh\u1edb (in-memory store). \u0110\u01b0\u1ee3c ph\u00e1t tri\u1ec3n b\u1edfi Salvatore Sanfilippo v\u00e0o n\u0103m 2009, Redis \u0111\u00e3 tr\u1edf th\u00e0nh m\u1ed9t trong nh\u1eefng c\u01a1 s\u1edf d\u1eef li\u1ec7u NoSQL ph\u1ed5 bi\u1ebfn nh\u1ea5t hi\u1ec7n nay, n\u1ed5i b\u1eadt v\u1edbi t\u1ed1c \u0111\u1ed9 c\u1ef1c nhanh v\u00e0 \u0111\u1ed9 tr\u1ec5 th\u1ea5p, khi\u1ebfn n\u00f3 tr\u1edf th\u00e0nh s\u1ef1 l\u1ef1a ch\u1ecdn tuy\u1ec7t v\u1eddi cho nhi\u1ec1u \u1ee9ng d\u1ee5ng v\u00e0 t\u00ecnh hu\u1ed1ng c\u1ea7n x\u1eed l\u00fd d\u1eef li\u1ec7u theo th\u1eddi gian th\u1ef1c (real-time application).</p> <p>Trong d\u1ef1 \u00e1n n\u00e0y m\u00ecnh s\u1ebd d\u00f9ng redis \u0111\u1ec3 th\u1ef1c hi\u1ec7n caching d\u1eef li\u1ec7u.</p>"},{"location":"project/movie/redis/#2-cac-mo-hinh-caching","title":"2. C\u00e1c m\u00f4 h\u00ecnh caching","text":""},{"location":"project/movie/redis/#21-so-sanh-cac-mo-hinh-redis-caching","title":"2.1. So s\u00e1nh c\u00e1c m\u00f4 h\u00ecnh Redis Caching","text":"M\u00f4 H\u00ecnh C\u00e1ch Ho\u1ea1t \u0110\u1ed9ng \u01afu \u0110i\u1ec3m Nh\u01b0\u1ee3c \u0110i\u1ec3m Hi\u1ec7u Su\u1ea5t \u0110\u1ecdc Hi\u1ec7u Su\u1ea5t Ghi \u0110\u1ed9 Ph\u1ee9c T\u1ea1p T\u00ednh Nh\u1ea5t Qu\u00e1n Cache-Aside \u1ee8ng d\u1ee5ng ki\u1ec3m tra cache, n\u1ebfu miss th\u00ec truy DB v\u00e0 ghi l\u1ea1i cache \u0110\u01a1n gi\u1ea3n, ch\u1ec9 cache khi c\u1ea7n thi\u1ebft Cache miss g\u00e2y tr\u1ec5, ph\u1ea3i x\u1eed l\u00fd \u0111\u1ed3ng b\u1ed9 khi d\u1eef li\u1ec7u thay \u0111\u1ed5i Cao Trung B\u00ecnh Th\u1ea5p Trung B\u00ecnh Write-Through Ghi v\u00e0o cache tr\u01b0\u1edbc, sau \u0111\u00f3 ghi DB \u0110\u1ecdc nhanh, cache lu\u00f4n \u0111\u1ed3ng b\u1ed9 Ghi ch\u1eadm v\u00ec ph\u1ea3i ghi c\u1ea3 cache v\u00e0 DB Cao Th\u1ea5p Trung B\u00ecnh Cao Write-Behind Ghi cache tr\u01b0\u1edbc, ghi DB sau (batch ho\u1eb7c async) Ghi c\u1ef1c nhanh, gi\u1ea3m t\u1ea3i DB Nguy c\u01a1 m\u1ea5t d\u1eef li\u1ec7u n\u1ebfu Redis s\u1eadp, \u0111\u1ed3ng b\u1ed9 ph\u1ee9c t\u1ea1p Cao R\u1ea5t Cao Cao Th\u1ea5p \u2192 Trung B\u00ecnh Read-Through \u1ee8ng d\u1ee5ng lu\u00f4n g\u1ecdi cache, Redis t\u1ef1 truy DB n\u1ebfu cache miss Logic t\u1eadp trung, \u0111\u01a1n gi\u1ea3n ph\u00eda \u1ee9ng d\u1ee5ng Redis c\u1ea7n h\u1ed7 tr\u1ee3 truy DB, kh\u00f4ng linh ho\u1ea1t v\u1edbi nhi\u1ec1u ngu\u1ed3n d\u1eef li\u1ec7u Cao Trung B\u00ecnh Trung B\u00ecnh Trung B\u00ecnh Cache Invalidation X\u00f3a ho\u1eb7c c\u1eadp nh\u1eadt cache khi DB thay \u0111\u1ed5i Gi\u1ea3m nguy c\u01a1 d\u1eef li\u1ec7u c\u0169, th\u00edch h\u1ee3p TTL v\u00e0 event-based Kh\u00f3 \u0111\u1ed3ng b\u1ed9 khi nhi\u1ec1u ngu\u1ed3n c\u1eadp nh\u1eadt d\u1eef li\u1ec7u Cao Trung B\u00ecnh Trung B\u00ecnh Cao (n\u1ebfu ki\u1ec3m so\u00e1t t\u1ed1t) Full Page Cache Cache to\u00e0n b\u1ed9 HTML/JSON response cho endpoint Ph\u1ea3n h\u1ed3i c\u1ef1c nhanh, gi\u1ea3m t\u1ea3i backend Kh\u00f4ng ph\u00f9 h\u1ee3p v\u1edbi d\u1eef li\u1ec7u thay \u0111\u1ed5i th\u01b0\u1eddng xuy\u00ean R\u1ea5t Cao Kh\u00f4ng \u00e1p d\u1ee5ng Th\u1ea5p Th\u1ea5p \u2192 Trung B\u00ecnh Hybrid Cache K\u1ebft h\u1ee3p nhi\u1ec1u m\u00f4 h\u00ecnh (VD: Read-Through + Write-Behind) C\u00e2n b\u1eb1ng hi\u1ec7u su\u1ea5t v\u00e0 \u0111\u1ed9 tin c\u1eady C\u1ea5u h\u00ecnh ph\u1ee9c t\u1ea1p, kh\u00f3 b\u1ea3o tr\u00ec R\u1ea5t Cao R\u1ea5t Cao R\u1ea5t Cao Tu\u1ef3 v\u00e0o c\u00e1ch k\u1ebft h\u1ee3p"},{"location":"project/movie/redis/#22-goi-y-lua-chon-theo-tinh-huong","title":"2.2. G\u1ee3i \u00fd l\u1ef1a ch\u1ecdn theo t\u00ecnh hu\u1ed1ng","text":"<ul> <li>CRUD ph\u1ed5 th\u00f4ng (blog, tin t\u1ee9c): <code>Cache-Aside</code> + TTL</li> <li>\u1ee8ng d\u1ee5ng \u0111\u1ecdc nhi\u1ec1u (e-commerce, search): <code>Write-Through</code> ho\u1eb7c <code>Read-Through</code></li> <li>\u1ee8ng d\u1ee5ng real-time, t\u1ed1c \u0111\u1ed9 cao (game, IoT): <code>Write-Behind</code></li> <li>Trang t\u0129nh, \u00edt thay \u0111\u1ed5i (landing page): <code>Full Page Cache</code></li> </ul>"},{"location":"project/movie/redis/#3-cai-at-thu-cong-tren-k8s","title":"3. C\u00e0i \u0111\u1eb7t th\u1ee7 c\u00f4ng tr\u00ean k8s","text":"<p>Github ch\u1ee9a file c\u00e0i \u0111\u1eb7t: https://github.com/vanphuoc9/install-redis-k8s.git</p>"},{"location":"project/movie/redis/#31-tao-pv-va-pvc","title":"3.1. T\u1ea1o PV v\u00e0 PVC","text":"redis-pv.yaml<pre><code>apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: redis-pv-volume\n  namespace: dev\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 20Gi\n  accessModes:\n    - ReadWriteOnce\n  nfs:\n    path: /mnt/nfs_share/redis\n    server: 192.168.1.110  # Thay b\u1eb1ng IP NFS Server\n    readOnly: false\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: redis-pv-claim\n  namespace: dev\nspec:\n  storageClassName: manual\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 20Gi\n</code></pre>"},{"location":"project/movie/redis/#32-cai-at-deployment-va-service","title":"3.2. C\u00e0i \u0111\u1eb7t Deployment v\u00e0 Service","text":"redis-dp.yaml<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: redis-deployment\n  namespace: dev\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis:7.4.0\n        ports:\n        - containerPort: 6379\n        volumeMounts:\n        - name: redis-data\n          mountPath: /data\n      volumes:\n      - name: redis-data\n        persistentVolumeClaim:\n          claimName: redis-pv-claim\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: redis-service\n  namespace: dev\nspec:\n  selector:\n    app: redis\n  ports:\n    - protocol: TCP\n      port: 6379\n      targetPort: 6379\n      nodePort: 30008\n  type: NodePort\n</code></pre> <p>Ch\u00fa \u00fd</p> <p>V\u00ec \u0111ang dev n\u00ean m\u00ecnh s\u1ebd d\u00f9ng type NodePort c\u1ed5ng 30008 \u0111\u1ec3 export redis v\u1edbi c\u1ed5ng 30008 \u0111\u1ec3 d\u1ec5 d\u00e0ng c\u1ea5u h\u00ecnh khi coding. Khi tr\u00ean production type ClusterIP </p>"},{"location":"project/movie/redis/#33-kiem-tra-ket-noi-voi-redis","title":"3.3. Ki\u1ec3m tra k\u1ebft n\u1ed1i v\u1edbi redis","text":"<p>Tr\u00ean window t\u1ea3i redis cli Redis-x64-5.0.14.1.zip </p> <pre><code>./redis-cli -h 192.168.1.100 -p 30008\n</code></pre> <p>Ch\u00fa \u00fd</p> <p>192.168.1.100 l\u00e0 \u0111\u1ecba ch\u1ec9 c\u1ee7a master, b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng 192.168.1.101, 192.168.1.102 l\u00e0 c\u00e1c \u0111\u1ecba ch\u1ec9 ip c\u1ee7a worker \u0111\u1ec3 test redis khi d\u00f9ng ClusterIP </p> <p><pre><code>192.168.1.100:30008&gt; set test_key \"hello\"\nOK\n</code></pre> <pre><code>192.168.1.100:30008&gt; get test_key\n\"hello\"\n</code></pre></p>"},{"location":"project/movie/redis/#4-tai-lieu-tham-khao","title":"4. T\u00e0i li\u1ec7u tham kh\u1ea3o","text":"<ul> <li>Redis Caching Strategies - Redis.io</li> <li>Caching best practices - Microsoft Learn</li> </ul>"},{"location":"blog/archive/2025/","title":"th\u00e1ng 4 2025","text":""}]}